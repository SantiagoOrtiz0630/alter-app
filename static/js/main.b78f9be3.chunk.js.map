{"version":3,"sources":["components/Home/Home.tsx","config/firebaseConfig.ts","stores/AuthStore.tsx","stores/SongStore.tsx","stores/MusicStore.tsx","stores/GameStore.tsx","stores/GuildStore.tsx","stores/CommentStore.tsx","stores/GamesStore.tsx","stores/Stores.tsx","utils/P5Wrapper/P5Visualizer.js","components/SongView/SongView.tsx","components/ErrorPage/ErrorPage.tsx","components/Dash/Dash.tsx","components/Filter/Filter.tsx","components/SongCard/SongCard.tsx","components/Catalog/Catalog.tsx","components/About/About.tsx","components/GameCard/GameCard.tsx","components/Guilds/Guilds.tsx","components/Profile/Profile.tsx","components/Auth/Auth.tsx","components/CreateGame/CreateGame.tsx","components/Comment/Comment.tsx","components/Game/Game.tsx","components/App/App.tsx","serviceWorker.js","index.tsx"],"names":["Home","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","songs","react_default","a","createElement","className","id","viewBox","d","x","y","width","height","Component","require","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","storage","auth","AuthStore","initializerDefineProperty","_descriptor","displayName","email","password","createUserWithEmailAndPassword","then","data","min","max","u","uid","user","guild","Math","floor","random","games","victories","collection","doc","set","console","log","catch","error","code","errorMessage","message","signInWithEmailAndPassword","_this2","signOut","setUserOutListener","_this3","onAuthStateChanged","get","exists","observable","action","SongStore","SongStore_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","cleanSong","where","querySnapshot","forEach","songActual","name","album","year","genre","colors","a_info","autor","idImg","readColors","readGenreActual","readSongFile","readImgFile","cleanGenres","cleanGenre","genreSong","parseInt","genresActual","genreActual","push","cleanSongFile","ref","child","concat","getDownloadURL","songUrl","songFile","_this4","cleanImgFile","imgUrl","imgFile","_this5","cleanColors","colorId","colorsActual","colorDB","color","MusicStore","MusicStore_descriptor","MusicStore_descriptor2","MusicStore_descriptor3","MusicStore_descriptor4","MusicStore_descriptor5","cleanMusicArray","orderBy","musicArray","musicArrayBackup","song","cleanFilterGenre","filterGenre","cleanFilterBand","filterBand","band","cleanFilterColor","filterColor","bandName","filter","genreId","genreIdSong","_this6","colorIdSong","GameStore","GameStore_descriptor","GameStore_descriptor2","GameStore_descriptor3","GameStore_descriptor4","GameStore_descriptor5","idGame","cleanGame","g","game","listenerComments","onSnapshot","cleanComments","c","timestamp","comments","setAutor","listenerAutor","newCom","Date","getTime","add","docRef","playerA","playerB","GuildStore","listenerGuild","GuildStore_descriptor","cleanGuilds","guilds","points","object","find","gu","newPoints","update","e","CommentStore","getAutor","GamesStore","listenerGames","GamesStore_descriptor","GamesStore_descriptor2","GamesStore_descriptor3","GamesStore_descriptor4","cleanGames","ourGames","ourGamesBackup","otherGames","otherGamesBackup","delete","redirectGame","Stores","authStore","songStore","musicStore","gameStore","gamesStore","guildStore","commentStore","P5Visualizer","canvas","p5","p","spectrum","fft","s","document","querySelector","clientWidth","clientHeight","audioSpect","btn","link","preload","soundFormats","loadSound","FFT","setup","createCanvas","WEBGL","noStroke","waveform","Array","i","length","b","loop","frameRate","myCustomRedrawAccordingToNewPropsHandler","split","vol","val","setVolume","draw","marX","marY","tamX","tamY","background","rectMode","CORNER","translate","fill","rect","noFill","CENTER","pop","calculate","setButtons","play","addEventListener","changePlay","stop","analyze","j","abs","prom","index","n","isPlaying","pause","windowResized","resizeCanvas","wrapper","newprops","remove","SongView","genres","genreString","volume","match","params","stores","readSong","getId","setState","P5Visualizer_P5Visualizer","type","defaultValue","onChange","preventDefault","target","value","src","map","key","style","backgroundColor","onClick","ErrorPage","Dash","react_router_dom","to","Filter","readFilterGenre","readFilterBand","readFilterColor","filterByGenre","filterByBand","filterByColor","SongCard","Catalog","readMusic","components_SongCard_SongCard","components_Filter_Filter","About","GameCard","onDragStart","dataTransfer","setData","bind","assertThisInitialized","findGameCard","cleanListenerGameCard","listener","draggable","Guilds","onDragOver","borderWidth","borderColor","styleDelete","onDragLeave","onDrop","getData","deleteGame","context","readGuilds","setListenerGames","cleanListenerGames","stopGuilds","GameCard_GameCard_GameCard","placeholder","dist_default","direction","hoverDelay","content","classes","hoverStyle","$nest","&:hover","getGuildContext","Profile","disabled","selectedStyle","updateTeam","Auth","handleKeyPressSignIn","event","signIn","handleKeyPressRegister","createNewUser","form","onKeyPress","getFormContext","CreateGame","handleKeyPressCreate","createGame","addPointToGuild","history","styles","maxLength","Comment","findCommentAutor","cleanListernerCommentAutor","Game","findGame","findComments","cleanListenerComments","defaultOptions","autoplay","animationData","rendererSettings","preserveAspectRatio","react_lottie_dist_default","options","Comment_Comment_Comment","which","keyCode","writeComment","toast","configure","autoClose","App","userState","setUserState","userStateListener","notifyUserState","styleBar","styleFont","fontFamily","fontSize","styleFoast","bodyClassName","progressClassName","components_Dash_Dash","react_router","path","component","exact","components_Auth_Auth","react_toastify","Boolean","window","location","hostname","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b78f9be3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Home.scss';\r\n\r\nimport { observer } from 'mobx-react';\r\n\r\nimport stores from '../../stores/Stores';\r\n\r\ninterface HomeProps {\r\n  match?: any,\r\n  history?: any\r\n}\r\n\r\ninterface HomeState {\r\n  songs?: any;\r\n}\r\n\r\n@observer class Home extends Component<HomeProps, HomeState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      songs: null\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <section className=\"Home\">\r\n\r\n                <svg className=\"Home-logo\" id=\"logo\" viewBox=\"0 0 96 138\">\r\n                    <path d=\"M96,138H0V0H96ZM8,130H88V8H8Z\" />\r\n                    <path d=\"M35,38.46H27.32L25.89,42H20.64l8-18.2h5.07L41.8,42H36.44Zm-1.5-3.79-2.34-5.83-2.34,5.83Z\" />\r\n                    <path d=\"M60,23.8H65.1V37.92h8.68V42H60Z\" />\r\n                    <path d=\"M26.69,63.88H21.1V59.8H37.41v4.08H31.84V78H26.69Z\" />\r\n                    <path d=\"M73,74v4H58.35V59.8H72.63v4H63.45v3.07h8.08v3.84H63.45V74Z\" />\r\n                    <path d=\"M64.53,109.16H61.72V114H56.57V95.8h8.32a10.29,10.29,0,0,1,4.29.83A6.26,6.26,0,0,1,72,99a6.37,6.37,0,0,1,1,3.56A6.29,6.29,0,0,1,72,106a6.2,6.2,0,0,1-2.62,2.29L73.34,114H67.83Zm3.25-6.63a2.46,2.46,0,0,0-.81-2,3.52,3.52,0,0,0-2.39-.7H61.72v5.33h2.86a3.62,3.62,0,0,0,2.39-.68A2.48,2.48,0,0,0,67.78,102.53Z\" />\r\n                    <rect x=\"25.92\" y=\"101.56\" width=\"6.68\" height=\"6.68\" />\r\n                </svg>\r\n                <p className=\"Home-text\">\r\n                    This section will be the HomePage of the App.</p>\r\n                <h3 className=\"Home-brand\">cooming soon...</h3>\r\n            </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import * as firebase from 'firebase/app';\r\n\r\n// Required for side-effects\r\nrequire(\"firebase/database\");\r\nrequire(\"firebase/storage\");\r\nrequire(\"firebase/auth\");\r\nrequire(\"firebase/firestore\");\r\n\r\nlet config = {\r\n    apiKey: \"AIzaSyBxIWCPFYm71xO2AWF5adN7zh_aq8s-TAM\",\r\n    authDomain: \"taller-app-a3390.firebaseapp.com\",\r\n    databaseURL: \"https://taller-app-a3390.firebaseio.com\",\r\n    projectId: \"taller-app-a3390\",\r\n    storageBucket: \"taller-app-a3390.appspot.com\",\r\n    messagingSenderId: \"445124244240\"\r\n  };\r\nfirebase.initializeApp(config);\r\n\r\nexport const db = firebase.firestore();\r\nexport const storage = firebase.storage();\r\nexport const auth =  firebase.auth();\r\n\r\nexport default db;","import { observable, action, computed, extendObservable } from 'mobx';\r\n\r\nexport default class AuthStore {\r\n\r\n    db: any = null;\r\n    auth: any = null;\r\n\r\n    constructor(db: any, auth: any) {\r\n        this.db = db;\r\n        this.auth = auth;\r\n    }\r\n\r\n    @observable user: any = null;\r\n\r\n    @action createNewUser(displayName: string, email: string, password: string) {\r\n        this.auth.createUserWithEmailAndPassword(email, password)\r\n            .then((data: any) => {\r\n                //add user to db\r\n\r\n                let u = {\r\n                    uid: data.user.uid,\r\n                    email: data.user.email,\r\n                    guild: getRandomInt(0, 3),\r\n                    games: 0,\r\n                    displayName,\r\n                    victories: 0\r\n                };\r\n\r\n                //adding user info to db\r\n                this.db.collection(\"users\").doc(data.user.uid).set(u)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully written!\");\r\n                    })\r\n                    .catch((error: any) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n                //add user to db\r\n\r\n            }).catch((error: any) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                // ...\r\n                console.log(\"Cant sign up\", errorMessage);\r\n            });\r\n    }\r\n\r\n    @action signIn(email: string, password: string) {\r\n        this.auth.signInWithEmailAndPassword(email, password).catch((error: any) => {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            console.log(\"Cant sign in\", errorMessage);\r\n            // ...\r\n        });\r\n    }\r\n\r\n    @action updateTeam(id: number) {\r\n\r\n        this.user.guild = id;\r\n\r\n        // search user in db\r\n        this.db.collection(\"users\").doc(this.user.uid).set(this.user).then((doc: any) => {\r\n            console.log(\"User's Guild updated to: \" + this.user.guild);\r\n        }).catch((error: any) => {\r\n            console.log(\"Error getting user in db:\", error);\r\n        });\r\n        // search user un db\r\n    }\r\n\r\n    @action signOut() {\r\n        this.auth.signOut().then(() => {\r\n            // Sign-out successful.\r\n            //console.log(\"Sign-out successful!\");\r\n        }).catch((error: any) => {\r\n            // An error happened.\r\n        });\r\n    }\r\n\r\n    @action userStateListener(setUserOutListener: (state: boolean) => void){\r\n        this.auth.onAuthStateChanged((user: any) => {\r\n            if (user) {\r\n\r\n                // search user in db\r\n                this.db.collection(\"users\").doc(user.uid).get().then((doc: any) => {\r\n                    if (doc.exists) {\r\n\r\n                        // User is signed in.\r\n                        let u = {\r\n                            displayName: doc.data().displayName,\r\n                            email: user.email,\r\n                            uid: user.uid,\r\n                            guild: doc.data().guild,\r\n                            games: doc.data().games,\r\n                            victories: doc.data().victories,\r\n                        }\r\n\r\n                        // ...\r\n\r\n                        this.user = u;\r\n                        console.log(\"User conected, in db: \", this.user);\r\n                        setUserOutListener(true);\r\n                    } else {\r\n                        // doc.data() will be undefined in this case\r\n                        console.log(\"No such user in db!\");\r\n                    }\r\n                }).catch((error: any) => {\r\n                    console.log(\"Error getting user in db:\", error);\r\n                });\r\n                // search user un db\r\n\r\n            } else {\r\n                // User is signed out.\r\n                // ...\r\n                this.user = null;\r\n                console.log(\"User is signed out!\");\r\n\r\n                setUserOutListener(false);\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction getRandomInt(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }","import { observable, action } from 'mobx';\r\n\r\nexport default class SongStore {\r\n\r\n    db: any = null;\r\n    storage: any = null;\r\n\r\n    constructor(db: any, storage: any){\r\n        this.db = db;\r\n        this.storage = storage;\r\n    }\r\n\r\n    @observable songActual: any = null;\r\n\r\n    @observable genreActual: string = \"\";\r\n\r\n    @observable genresActual: any = null;\r\n\r\n    @observable songFile: any = null;\r\n    @observable imgFile: any = null;\r\n\r\n    @observable colorsActual: any = null;\r\n\r\n    /* This method read the data from realtime board of firebase, with the method on, read all the objects and update when anyone is edited */\r\n\r\n    @action readSong(id: number) {\r\n        this.cleanSong();\r\n\r\n        this.db.collection(\"songs\").where('id', '==', id).get().then((querySnapshot: any) => {\r\n\r\n            querySnapshot.forEach((doc: any) => {\r\n\r\n                this.songActual = {\r\n                    name: doc.data().name,\r\n                    id: doc.data().id,\r\n                    album: doc.data().album,\r\n                    year: doc.data().year,\r\n                    genre: doc.data().genre,\r\n                    colors: doc.data().colors,\r\n                    a_info: doc.data().a_info,\r\n                    autor: doc.data().autor,\r\n                    idImg: doc.data().idImg\r\n                }\r\n\r\n                console.log(\"The Song found is: \", this.songActual.name);\r\n\r\n                this.readColors();\r\n                this.readGenreActual();\r\n                this.readSongFile(doc.data().id);\r\n                this.readImgFile(doc.data().idImg);\r\n\r\n                return;\r\n            });\r\n        }).catch(function(error: any) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n\r\n    }\r\n\r\n    /* */\r\n\r\n    @action readGenreActual() {\r\n        this.cleanGenres();\r\n        this.cleanGenre();\r\n\r\n        if (this.songActual && this.songActual.genre !== '') {\r\n\r\n            this.songActual.genre.forEach((genreSong: any) => {\r\n                let id = parseInt(genreSong);\r\n\r\n                this.db.collection(\"genres\").where('id', '==', id).get().then((querySnapshot: any) => {\r\n                    this.genresActual = [];\r\n\r\n                    querySnapshot.forEach((doc: any) => {\r\n\r\n                        if (this.genreActual === \"\") {\r\n                            this.genreActual = doc.data().name;\r\n                        } else {\r\n                            this.genreActual += \", \" + doc.data().name;\r\n                        }\r\n\r\n                        let genre = {\r\n                            name: doc.data().name,\r\n                            id: doc.data().id\r\n                        }\r\n\r\n                        this.genresActual.push(genre);\r\n                    });\r\n                }).catch((error: any) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    @action readSongFile(id: number) {\r\n        this.cleanSongFile();\r\n\r\n        let ref = this.storage.ref();\r\n\r\n\r\n        ref.child(`songs/${id}.mp3`).getDownloadURL().then((songUrl: any) => {\r\n            // `url` is the download URL of your archive\r\n\r\n            this.songFile = songUrl;\r\n\r\n        }).catch(function (error: any) {\r\n            // Handle any errors\r\n        });\r\n    }\r\n\r\n    @action readImgFile(id: number) {\r\n        this.cleanImgFile();\r\n\r\n        let ref = this.storage.ref();\r\n\r\n        ref.child(`img/${id}.jpg`).getDownloadURL().then((imgUrl: any) => {\r\n            // `url` is the download URL of your archive\r\n\r\n            this.imgFile = imgUrl;\r\n\r\n        }).catch( (error: any) => {\r\n            // Handle any errors\r\n        });\r\n    }\r\n\r\n    @action readColors() {\r\n        this.cleanColors();\r\n\r\n        if (this.songActual !== null) {\r\n\r\n            this.songActual.colors.forEach((colorId: any) => {\r\n\r\n                let id = parseInt(colorId);\r\n                this.colorsActual = [];\r\n\r\n                this.db.collection(\"colors\").where(\"id\", \"==\", id).get().then((querySnapshot: any) => {\r\n\r\n                    querySnapshot.forEach((colorDB: any) => {\r\n\r\n                        let color = {\r\n                            id: colorDB.data().id,\r\n                            color: colorDB.data().color\r\n                        }\r\n\r\n                        this.colorsActual.push(color);\r\n                    });\r\n                }).catch(function(error: any) {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    /* setter methods */\r\n\r\n    /* this method reset the value of the variable */\r\n\r\n    @action cleanSong() {\r\n        this.songActual = null;\r\n    }\r\n\r\n    @action cleanGenre() {\r\n        this.genreActual = \"\";\r\n    }\r\n\r\n    @action cleanGenres() {\r\n        this.genresActual = null;\r\n    }\r\n\r\n    @action cleanSongFile() {\r\n        this.songFile = null;\r\n    }\r\n\r\n    @action cleanImgFile() {\r\n        this.imgFile = null;\r\n    }\r\n\r\n    @action cleanColors() {\r\n        this.colorsActual = null;\r\n    }\r\n\r\n}","import { observable, action, computed, extendObservable } from 'mobx';\r\n\r\nexport default class MusicStore {\r\n\r\n    db: any = null;\r\n\r\n    constructor(db: any) {\r\n        this.db = db;\r\n    }\r\n\r\n    @observable musicArray: any = [];\r\n    @observable musicArrayBackup: any = [];\r\n\r\n    @observable filterGenre: any = null;\r\n    @observable filterBand: any = null;\r\n    @observable filterColor: any = null;\r\n\r\n    /* This method read the data from realtime board of firebase, with the method on, read all the objects and update when anyone is edited */\r\n\r\n    @action readMusic() {\r\n        this.cleanMusicArray();\r\n\r\n        //order by name\r\n        this.db.collection(\"songs\").orderBy(\"name\", \"asc\").get().then((querySnapshot: any) => {\r\n\r\n            this.musicArray = [];\r\n            this.musicArrayBackup = [];\r\n\r\n            querySnapshot.forEach((doc: any) => {\r\n\r\n                let song = {\r\n                    name: doc.data().name,\r\n                    id: doc.data().id,\r\n                    album: doc.data().album,\r\n                    year: doc.data().year,\r\n                    genre: doc.data().genre,\r\n                    colors: doc.data().colors,\r\n                    a_info: doc.data().a_info,\r\n                    autor: doc.data().autor,\r\n                    idImg: doc.data().idImg\r\n                }\r\n\r\n                this.musicArrayBackup.push(song);\r\n                this.musicArray.push(song);\r\n            });\r\n        }).catch(function (error: any) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n    }\r\n\r\n    @action readFilterGenre() {\r\n        this.cleanFilterGenre();\r\n\r\n        this.db.collection(\"genres\").get().then((querySnapshot: any) => {\r\n            this.filterGenre = [];\r\n            querySnapshot.forEach((doc: any) => {\r\n\r\n                let genre = {\r\n                    name: doc.data().name,\r\n                    id: doc.data().id\r\n                }\r\n\r\n                this.filterGenre.push(genre);\r\n            });\r\n        }).catch(function (error: any) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n    }\r\n\r\n    @action readFilterBand() {\r\n        this.cleanFilterBand();\r\n\r\n        this.db.collection(\"bands\").get().then((querySnapshot: any) => {\r\n            this.filterBand = [];\r\n            querySnapshot.forEach((doc: any) => {\r\n                let band = {\r\n                    name: doc.data().name,\r\n                    id: doc.data().id\r\n                }\r\n\r\n                this.filterBand.push(band);\r\n            });\r\n        }).catch(function (error: any) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n    }\r\n\r\n    @action readFilterColor() {\r\n        this.cleanFilterColor();\r\n\r\n        this.db.collection(\"colors\").get().then((querySnapshot: any) => {\r\n            this.filterColor = [];\r\n            querySnapshot.forEach((doc: any) => {\r\n                let color = {\r\n                    name: doc.data().color,\r\n                    id: doc.data().id\r\n                }\r\n\r\n                this.filterColor.push(color);\r\n            });\r\n        }).catch(function (error: any) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n    }\r\n\r\n    /* filter methods */\r\n\r\n    @action filterByBand(bandName: string) {\r\n        this.musicArray = this.musicArrayBackup;\r\n        this.musicArray = this.musicArray.filter((song: any) => song.autor === bandName);\r\n    }\r\n\r\n    @action filterByGenre(genreId: number) {\r\n        this.musicArray = this.musicArrayBackup;\r\n\r\n        this.musicArray = [];\r\n\r\n        this.musicArrayBackup.forEach((song: any) => {\r\n            if (song.genre) {\r\n                song.genre.forEach((genreIdSong: any) => {\r\n                    if (genreIdSong === genreId) {\r\n                        this.musicArray.push(song);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    @action filterByColor(colorId: number) {\r\n        this.musicArray = this.musicArrayBackup;\r\n\r\n        this.musicArray = [];\r\n\r\n        this.musicArrayBackup.forEach((song: any) => {\r\n            if (song.colors) {\r\n                song.colors.forEach((colorIdSong: any) => {\r\n                    if (colorIdSong === colorId) {\r\n                        this.musicArray.push(song);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /* this method reset the value of the variable */\r\n\r\n    @action cleanMusicArray() {\r\n        this.musicArray = [];\r\n        this.musicArrayBackup = [];\r\n    }\r\n\r\n    @action cleanFilterGenre() {\r\n        this.filterGenre = null;\r\n    }\r\n\r\n    @action cleanFilterBand() {\r\n        this.filterBand = null;\r\n    }\r\n\r\n    @action cleanFilterColor() {\r\n        this.filterColor = null;\r\n    }\r\n\r\n}","import { observable, action, computed, extendObservable } from 'mobx';\r\n\r\nexport default class GameStore {\r\n\r\n    db: any = null;\r\n\r\n    constructor(db: any) {\r\n        this.db = db;\r\n    }\r\n\r\n    @observable game: any = null;\r\n    @observable comments: any = [];\r\n\r\n    @observable playerA: any = null;\r\n    @observable playerB: any = null;\r\n\r\n    @observable listenerComments: any = null;\r\n\r\n    //read methods\r\n\r\n    @action findGame(idGame: string) {\r\n\r\n        this.db.collection(\"games\").doc(idGame).get().then((doc: any) => {\r\n            this.cleanGame();\r\n\r\n            let g = doc.data();\r\n\r\n            this.game = g;\r\n\r\n        }).catch((error: any) => {\r\n            console.log(\"Error getting game: \", error);\r\n        });\r\n    }\r\n\r\n    @action findComments(idGame: string) {\r\n\r\n        this.listenerComments = this.db.collection(\"games\").doc(idGame).collection(\"comments\").orderBy(\"timestamp\", \"desc\").onSnapshot((querySnapshot: any) => {\r\n            this.cleanComments();\r\n\r\n            querySnapshot.forEach((doc: any) => {\r\n\r\n                let c = {\r\n                    data: doc.data().data,\r\n                    uid: doc.data().uid,\r\n                    id: doc.id,\r\n                    timestamp: doc.data().timestamp\r\n                }\r\n\r\n                this.comments.push(c);\r\n            });\r\n        });\r\n    }\r\n\r\n    @action findGameCard(uid: string, setAutor: (autor: any, listener: any) => void) {\r\n\r\n        let listenerAutor = this.db.collection(\"users\").doc(uid).onSnapshot((doc: any) => {\r\n\r\n            let autor = {\r\n                displayName: doc.data().displayName\r\n            }\r\n\r\n            setAutor(autor, listenerAutor);\r\n        });\r\n    }\r\n\r\n    //read methods\r\n\r\n    //write methods\r\n\r\n    @action writeComment(data: string, uid: string) {\r\n\r\n        let newCom = {\r\n            data,\r\n            uid,\r\n            timestamp: new Date().getTime()\r\n        }\r\n\r\n        this.db.collection(\"games\").doc(this.game.idGame+\"\").collection(\"comments\").add(newCom)\r\n            .then(function (docRef: any) {\r\n                console.log(\"Document written with ID: \", docRef.id);\r\n            })\r\n            .catch(function (error: any) {\r\n                console.error(\"Error adding document: \", error);\r\n            });\r\n    }\r\n\r\n    //write methods\r\n\r\n    @action cleanGame() {\r\n        this.game = null;\r\n    }\r\n\r\n    @action cleanComments() {\r\n        this.comments = [];\r\n    }\r\n\r\n    @action cleanListenerComments(listenerComments: any) {\r\n        this.comments = [];\r\n\r\n        if (this.listenerComments) {\r\n            this.listenerComments();\r\n        }\r\n    }\r\n\r\n    @action cleanListenerGameCard(listenerAutor: any) {\r\n        listenerAutor();\r\n    }\r\n\r\n    @action cleanPlayerA() {\r\n        this.playerA = null;\r\n    }\r\n\r\n    @action cleanPlayerB() {\r\n        this.playerB = null;\r\n    }\r\n\r\n}","import { observable, action } from 'mobx';\r\n\r\nexport default class GuildStore {\r\n\r\n    db: any = null;\r\n\r\n    listenerGuild: any = null;\r\n\r\n    constructor(db: any) {\r\n        this.db = db;\r\n    }\r\n\r\n    @observable guilds: any[] = [];\r\n\r\n    @action readGuilds() {\r\n        this.cleanGuilds();\r\n\r\n        this.listenerGuild = this.db.collection(\"guilds\")\r\n            .onSnapshot((querySnapshot: any) => {\r\n                this.guilds = [];\r\n\r\n                querySnapshot.forEach((doc: any) => {\r\n\r\n                    let g = {\r\n                        name: doc.data().name,\r\n                        id: doc.data().id,\r\n                        points: doc.data().points,\r\n                        color: doc.data().color,\r\n                    }\r\n\r\n                    this.guilds.push(g);\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    @action stopGuilds() {\r\n        this.cleanGuilds();\r\n\r\n        if (this.listenerGuild) {\r\n            this.listenerGuild();\r\n        }\r\n    }\r\n\r\n    @action cleanGuilds() {\r\n        this.guilds = [];\r\n    }\r\n\r\n    @action addPointToGuild(user: any){\r\n        let id = user.guild;\r\n\r\n        let object = this.guilds.find((gu: any) => gu.id == id);\r\n        \r\n        let newPoints = parseInt(object.points + 1);\r\n\r\n        this.db.collection(\"guilds\").doc(id+\"\").update({\r\n            points: newPoints\r\n        }).catch((e: any) => {\r\n            console.error(\"Error setting guild points: \", e);\r\n        });\r\n    }\r\n\r\n}","import { observable, action, computed, extendObservable } from 'mobx';\r\nimport db from '../config/firebaseConfig';\r\n\r\nexport default class CommentStore {\r\n\r\n    db: any = null;\r\n\r\n    constructor(db: any){\r\n        this.db = db;\r\n    }\r\n    \r\n    @action findCommentAutor(uid: string, getAutor: (a: any, listener: any) => void) {\r\n\r\n        let autor: any = null;\r\n\r\n        let listenerAutor = this.db.collection(\"users\").doc(uid)\r\n        .onSnapshot((doc: any) => {\r\n            autor = doc.data();\r\n            \r\n            this.db.collection(\"guilds\").doc(autor.guild+\"\").get().then((guild: any) => {\r\n                if (guild.exists) {\r\n                    autor.color = guild.data().color;\r\n\r\n                    getAutor(autor, listenerAutor);\r\n\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log(\"No such Guild in Comment!\");\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log(\"Error getting Guild in Comment:\", error);\r\n            });\r\n        });\r\n    }\r\n\r\n    @action cleanListernerCommentAutor(listenerAutor: any){\r\n        listenerAutor();\r\n    }\r\n    \r\n}\r\n","import { observable, action, computed, extendObservable } from 'mobx';\r\n\r\nexport default class GamesStore {\r\n\r\n    db: any = null;\r\n\r\n    listenerGames: any = null;\r\n\r\n    constructor(db: any) {\r\n        this.db = db;\r\n    }\r\n\r\n    @observable ourGames: any[] = [];\r\n    @observable ourGamesBackup: any[] = [];\r\n\r\n    @observable otherGames: any[] = [];\r\n    @observable otherGamesBackup: any[] = [];\r\n\r\n    /* This method read the data from realtime board of firebase, with the method on, read all the objects and update when anyone is edited */\r\n\r\n    @action setListenerGames(autor: string) {\r\n\r\n        this.cleanGames();\r\n\r\n        this.listenerGames = this.db.collection(\"games\").orderBy(\"timestamp\", \"desc\").onSnapshot((querySnapshot: any) => {\r\n\r\n            this.cleanGames();\r\n\r\n            querySnapshot.forEach((doc: any) => {\r\n\r\n                let g = doc.data();\r\n\r\n                if (g.autor === autor) {\r\n                    this.ourGames.push(g);\r\n                    this.ourGamesBackup.push(g);\r\n                } else {\r\n                    this.otherGames.push(g);\r\n                    this.otherGamesBackup.push(g);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    @action deleteGame(id: string) {\r\n\r\n        this.db.collection(\"games\").doc(id).collection(\"comments\").get().then((querySnapshot: any) => {\r\n            querySnapshot.forEach((docRef: any) => {\r\n\r\n                this.db.collection(\"games\").doc(id).collection(\"comments\").doc(docRef.id).delete().then(() => {\r\n                   // console.log(\"comment successfully deleted!\");\r\n                }).catch((error: any) => {\r\n                    console.error(\"Error removing comment: \", error);\r\n                });\r\n            });\r\n\r\n           // console.log(\"Comments successfully deleted!\");\r\n        }).catch((error: any) => {\r\n            console.error(\"Error removing comments: \", error);\r\n        });\r\n\r\n        this.db.collection(\"games\").doc(id).delete().then(() => {\r\n            console.log(\"Game successfully deleted!\");\r\n        }).catch((error: any) => {\r\n            console.error(\"Error removing game: \", error);\r\n        });\r\n    }\r\n\r\n    /* write methods */\r\n\r\n    @action createGame(uid: string, name: string, redirectGame: (id: string) => void) {\r\n\r\n        // Add a new document with a generated id.\r\n        this.db.collection(\"games\").add({\r\n            name,\r\n            autor: uid,\r\n            state: \"new\",\r\n            timestamp: new Date().getTime(),\r\n        })\r\n            .then((docRef: any) => {\r\n\r\n                this.db.collection(\"games\").doc(docRef.id).update({\r\n                    idGame: docRef.id\r\n                }).catch((e: any) => {\r\n                    console.error(\"Error setting game id: \", e);\r\n                });\r\n                console.log(\"Game written with ID: \", docRef.id);\r\n\r\n                redirectGame(docRef.id);\r\n            })\r\n            .catch((error: any) => {\r\n                console.error(\"Error adding game: \", error);\r\n            });\r\n    }\r\n\r\n    /* filter methods */\r\n\r\n    @action cleanListenerGames() {\r\n\r\n        if (this.listenerGames) {\r\n            this.listenerGames();\r\n        }\r\n    }\r\n\r\n    @action cleanGames() {\r\n        this.ourGames = [];\r\n        this.ourGamesBackup = [];\r\n        this.otherGames = [];\r\n        this.otherGamesBackup = [];\r\n    }\r\n\r\n}\r\n\r\nfunction sortByTimestamp(a: any, b: any) {\r\n    return a.timestamp - b.timestamp;\r\n}","import db, { auth, storage } from '../config/firebaseConfig';\r\n\r\nimport AuthStore from './AuthStore';\r\nimport SongStore from './SongStore';\r\nimport MusicStore from './MusicStore';\r\nimport GameStore from './GameStore';\r\nimport GuildStore from './GuildStore';\r\nimport CommentStore from './CommentStore';\r\nimport GamesStore from './GamesStore';\r\n\r\nconst authStore = new AuthStore(db, auth);\r\nconst songStore = new SongStore(db, storage);\r\nconst musicStore = new MusicStore(db);\r\nconst gameStore = new GameStore(db);\r\nconst gamesStore = new GamesStore(db);\r\nconst guildStore = new GuildStore(db);\r\nconst commentStore = new CommentStore(db);\r\n\r\nexport default {\r\n    authStore,\r\n    songStore,\r\n    musicStore,\r\n    gameStore,\r\n    gamesStore,\r\n    guildStore,\r\n    commentStore\r\n};","import React, { Component } from 'react';\r\nimport p5 from 'p5';\r\nimport \"p5/lib/addons/p5.sound\";\r\n\r\nexport default class P5Visualizer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.canvas = new p5((p) => {\r\n\r\n            let width = document.querySelector('#canvas').clientWidth;\r\n            let height = document.querySelector('#canvas').clientHeight;\r\n\r\n            let color = [];\r\n\r\n            let audioSpect = [];\r\n            let spectrum;\r\n            let fft;\r\n            let s;\r\n\r\n            let btn = false;\r\n\r\n            let link = `${this.props.link}`;\r\n\r\n            p.preload = function () {\r\n                p.soundFormats('mp3', 'ogg');\r\n\r\n                s = p.loadSound(link);\r\n                fft = new p5.FFT();\r\n            }\r\n\r\n            p.setup = function () {\r\n                p.createCanvas(width, height, p.WEBGL);\r\n                p.noStroke();\r\n\r\n                spectrum = fft.waveform();\r\n\r\n                audioSpect = new Array(8);\r\n                for (var i = 0; i < audioSpect.length; i++) {\r\n                    audioSpect[i] = new Array(10);\r\n                }\r\n\r\n                for (let a = 0; a < audioSpect.length; a++) {\r\n                    for (let b = 0; b < audioSpect[a].length; b++) {\r\n                        audioSpect[a][b] = false;\r\n                    }\r\n                }\r\n                s.loop();\r\n\r\n                p.frameRate(60);\r\n            };\r\n\r\n            p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\r\n                if (props.color) {\r\n\r\n                    color = [];\r\n\r\n                    var colors = props.color.split(',');\r\n                    color.push(parseInt(colors[0]));\r\n                    color.push(parseInt(colors[1]));\r\n                    color.push(parseInt(colors[2]));\r\n                }\r\n\r\n                if (props.vol) {\r\n                    let val = parseInt(props.vol) / 100;\r\n                    if (s) {\r\n                        s.setVolume(val);\r\n                    }\r\n                }\r\n\r\n            };\r\n\r\n            p.draw = function () {\r\n\r\n                let marX = width / 42.3333;\r\n                let marY = height / 45.3333;\r\n\r\n                let tamX = width / 9.6269;\r\n                let tamY = height / 12.5;\r\n\r\n                p.background(250);\r\n\r\n                /*\r\n                p.fill(250, 0, 0);\r\n                p.ellipse(0, 0, 10, 10);\r\n                p.noFill();*/\r\n\r\n                p.rectMode(p.CORNER);\r\n\r\n                p.push();\r\n                p.translate(-width / 2, -height / 2);\r\n\r\n                for (let x = 0; x < audioSpect.length; x++) {\r\n\r\n                    for (let y = 0; y < audioSpect[0].length; y++) {\r\n                        if (audioSpect[x][y]) {\r\n                            //let op = 100 - (i * 5);\r\n\r\n                            //let op = 200;\r\n\r\n                            p.fill(color[0], color[1], color[2]);\r\n\r\n                            p.rect(((x * (tamX + marX))), (height - (tamY)) - (y * (tamY + marY)), tamX,\r\n                                tamY);\r\n                            p.noFill();\r\n\r\n                            audioSpect[x][y] = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                p.rectMode(p.CENTER);\r\n                p.pop();\r\n                p.calculate();\r\n                p.setButtons();\r\n            };\r\n\r\n            p.setButtons = function () {\r\n                if (btn === false) {\r\n                    let play = document.querySelector('#play');\r\n                    if (play) {\r\n                        play.addEventListener('click', p.changePlay);\r\n                    }\r\n                    let stop = document.querySelector('#stop');\r\n                    if (stop) {\r\n                        stop.addEventListener('click', p.stop);\r\n                        btn = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            p.calculate = function () {\r\n                spectrum = fft.analyze();\r\n                let num = 50;\r\n\r\n                //\r\n                let mov = 25;\r\n\r\n                for (let i = mov; i < 1000; i += num) {\r\n                    let val = 0;\r\n\r\n                    for (let j = 0; j < num; j++) {\r\n                        let valor = Math.abs(spectrum[i + j]);\r\n                        val += (valor * 1);\r\n                    }\r\n\r\n                    let prom = val / num;\r\n\r\n                    let index = (i - mov) / num;\r\n\r\n                    if (index < audioSpect.length) {\r\n                        let n = parseInt(prom / 10) - 8;\r\n\r\n                        if (n < 0) {\r\n                            n = 0;\r\n                        }\r\n\r\n                        if (n > audioSpect[0].length) {\r\n                            n = 10;\r\n                        }\r\n\r\n                        for (let j = 0; j < n; j++) {\r\n                            audioSpect[index][j] = true;\r\n                        }\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n\r\n            p.changePlay = function () {\r\n                if (s != null) {\r\n                    if (!s.isPlaying()) {\r\n                        s.loop();\r\n                    } else {\r\n                        s.pause();\r\n                    }\r\n                }\r\n            };\r\n\r\n            p.stop = function () {\r\n                if (s != null) {\r\n                    s.stop();\r\n                }\r\n            };\r\n\r\n            p.windowResized = function () {\r\n                if (document.querySelector('#canvas')) {\r\n                    width = document.querySelector('#canvas').clientWidth;\r\n                    height = document.querySelector('#canvas').clientHeight;\r\n                    p.resizeCanvas(width, height);\r\n                }\r\n            };\r\n\r\n        }, this.wrapper);\r\n        if (this.canvas.myCustomRedrawAccordingToNewPropsHandler) {\r\n            this.canvas.myCustomRedrawAccordingToNewPropsHandler(this.props);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(newprops) {\r\n\r\n        if (this.canvas.myCustomRedrawAccordingToNewPropsHandler) {\r\n            this.canvas.myCustomRedrawAccordingToNewPropsHandler(newprops);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        this.canvas.stop();\r\n\r\n        this.canvas.remove();\r\n        this.wrapper.remove();\r\n    }\r\n\r\n    render() {\r\n        return <div id=\"canvas\" ref={wrapper => this.wrapper = wrapper}></div>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './SongView.scss';\r\n\r\nimport stores from '../../stores/Stores';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport P5Visualizer from '../../utils/P5Wrapper/P5Visualizer';\r\n\r\ninterface SongViewProps {\r\n  match?: any\r\n}\r\n\r\ninterface SongViewState {\r\n  song?: any,\r\n  colors?: any,\r\n  color?: string | null,\r\n  genres?: any,\r\n  genreString?: string | null,\r\n  songUrl?: string | null,\r\n  imgUrl?: string | null,\r\n  volume?: string\r\n}\r\n\r\n@observer class SongView extends Component<SongViewProps, SongViewState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      song: null,\r\n      colors: null,\r\n      color: \"25,25,25\",\r\n      genres: null,\r\n      genreString: \"\",\r\n      songUrl: null,\r\n      imgUrl: null,\r\n      volume: \"50\"\r\n    }\r\n  }\r\n\r\n  getId() {\r\n    return parseInt(this.props.match.params.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    stores.songStore.readSong(this.getId());\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    stores.songStore.cleanGenre();\r\n    stores.songStore.cleanGenres();\r\n    stores.songStore.cleanColors();\r\n    stores.songStore.cleanSongFile();\r\n    stores.songStore.cleanImgFile();\r\n    stores.songStore.cleanSong();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.song === null) {\r\n      if (stores.songStore.songActual) {\r\n        this.setState({ song: stores.songStore.songActual });\r\n      }\r\n      return <div className=\"Loading\"><p >Loading Song...</p></div>;\r\n    }\r\n\r\n    if (this.state.songUrl === null) {\r\n\r\n      if (stores.songStore.songFile) {\r\n        this.setState({ songUrl: stores.songStore.songFile });\r\n      }\r\n\r\n      return <div className=\"Loading\"><p >Loading Source...</p></div>;\r\n    }\r\n\r\n    if (this.state.imgUrl === null) {\r\n\r\n      if (stores.songStore.imgFile) {\r\n        this.setState({ imgUrl: stores.songStore.imgFile });\r\n      }\r\n\r\n      return <div className=\"Loading\"><p >Loading Source...</p></div>;\r\n    }\r\n\r\n    if (this.state.genres === null) {\r\n      if (stores.songStore.genresActual) {\r\n        this.setState({\r\n          genres: stores.songStore.genresActual,\r\n          genreString: stores.songStore.genreActual\r\n        });\r\n      }\r\n      return <div className=\"Loading\"><p >Loading genres...</p></div>;\r\n    }\r\n\r\n    if (this.state.colors === null) {\r\n\r\n      if (stores.songStore.colorsActual) {\r\n        this.setState({ colors: stores.songStore.colorsActual });\r\n      }\r\n\r\n      return <div className=\"Loading\"><p >Loading colors...</p></div>;\r\n    }\r\n\r\n    return (\r\n      <section className=\"SongView\">\r\n\r\n        <div className=\"SongView__Song\">\r\n          <div className=\"SongView__Song-action\">\r\n\r\n            <div className=\"SongView__Song-action__view\">\r\n\r\n              {(this.state.color) ? <P5Visualizer vol={this.state.volume} color={this.state.color} link={this.state.songUrl}/> : \"\"}\r\n\r\n              <div className=\"SongView__Song-action__title\">{this.state.song.name}</div>\r\n            </div>\r\n\r\n            <div className=\"SongView__Song-action__buttons\">\r\n              <div className=\"SongView__Song-action__btn\" id=\"play\">\r\n                <svg className=\"playPauseSvg\" viewBox=\"0 0 50 50\">\r\n                <polygon points=\"15.89 42.45 46.11 25 15.89 7.55 15.89 42.45\"/>\r\n                <rect x=\"3.89\" y=\"7.22\" width=\"9.78\" height=\"35.56\"/>\r\n                </svg>\r\n              </div>\r\n              <div className=\"SongView__Song-action__btn\" id=\"stop\">\r\n                <svg className=\"stopSvg\" viewBox=\"0 0 50 50\">\r\n                  <rect x=\"5\" y=\"5\" width=\"40\" height=\"40\"/>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n\r\n            <input type=\"range\" defaultValue={this.state.volume} min=\"0\" max=\"100\" className=\"SongView__Song-action__input\" onChange={(e:any) => {\r\n              e.preventDefault();\r\n              this.setState({volume: e.target.value});\r\n            }} />\r\n\r\n          </div>\r\n\r\n          <div className=\"SongView__Song-data\">\r\n\r\n            <h3>{this.state.song.autor}</h3>\r\n\r\n            <p>{this.state.song.a_info}</p>\r\n\r\n            <h4><strong>GENRES: </strong>{this.state.genreString}</h4>\r\n            <h4><strong>YEAR: </strong>{this.state.song.year}</h4>\r\n            <h4><strong>ALBUM: </strong>{this.state.song.album}</h4>\r\n\r\n            <div className=\"SongView__Song-data__bottom\">\r\n\r\n              <img src={stores.songStore.imgFile} className=\"SongView__Song-data__img\" />\r\n\r\n              <div className=\"SongView__Song-data__buttons\">\r\n\r\n                <div className=\"SongView__Song-data__colors\">\r\n                  {this.state.colors.map((color: any) => {\r\n                    return <div key={color.id} style={{ backgroundColor: `rgb(${color.color})` }}\r\n                      className=\"SongView__Song-data__color\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.setState({ color: color.color });\r\n                      }} >\r\n                    </div>\r\n                  })}\r\n                </div>\r\n\r\n                <div className=\"SongView__Song-data__add\">\r\n                  <svg className=\"addSvg\" viewBox=\"0 0 50 50\">\r\n                    <polygon points=\"32 18 32 5 18 5 18 18 5 18 5 32 18 32 18 45 32 45 32 32 45 32 45 18 32 18\"/>\r\n                  </svg>\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SongView;\r\n","import React, { Component } from 'react';\r\nimport './ErrorPage.scss';\r\n\r\nclass ErrorPage extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"ErrorPage\">\r\n        <h3>Página no Encontrada</h3>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { Component } from 'react';\r\nimport './Dash.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport stores from '../../stores/Stores';\r\n\r\ninterface DashProps {\r\n}\r\n\r\ninterface DashState {\r\n\r\n}\r\n\r\n@observer class Dash extends Component<DashProps, DashState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"Dash\">\r\n\r\n                <svg className=\"Logo \" viewBox=\"0 0 96 138\">\r\n                    <path d=\"M96,138H0V0H96ZM8,130H88V8H8Z\" />\r\n                    <path d=\"M35,38.46H27.32L25.89,42H20.64l8-18.2h5.07L41.8,42H36.44Zm-1.5-3.79-2.34-5.83-2.34,5.83Z\" />\r\n                    <path d=\"M60,23.8H65.1V37.92h8.68V42H60Z\" />\r\n                    <path d=\"M26.69,63.88H21.1V59.8H37.41v4.08H31.84V78H26.69Z\" />\r\n                    <path d=\"M73,74v4H58.35V59.8H72.63v4H63.45v3.07h8.08v3.84H63.45V74Z\" />\r\n                    <path d=\"M64.53,109.16H61.72V114H56.57V95.8h8.32a10.29,10.29,0,0,1,4.29.83A6.26,6.26,0,0,1,72,99a6.37,6.37,0,0,1,1,3.56A6.29,6.29,0,0,1,72,106a6.2,6.2,0,0,1-2.62,2.29L73.34,114H67.83Zm3.25-6.63a2.46,2.46,0,0,0-.81-2,3.52,3.52,0,0,0-2.39-.7H61.72v5.33h2.86a3.62,3.62,0,0,0,2.39-.68A2.48,2.48,0,0,0,67.78,102.53Z\" />\r\n                    <rect x=\"25.92\" y=\"101.56\" width=\"6.68\" height=\"6.68\" />\r\n                </svg>\r\n\r\n                <div className=\"Dash__buttons\">\r\n\r\n                    <Link to={`/`}>\r\n                        <div className=\"Dash__buttons-btn \"><h2 className=\"hvr-underline-from-left\">Home</h2></div>\r\n                    </Link>\r\n                    <Link to={`/guilds`}>\r\n                        <div className=\"Dash__buttons-btn\"><h2 className=\"hvr-underline-from-left\">Guilds</h2></div>\r\n                    </Link>\r\n                    <Link to={`/catalog`}>\r\n                        <div className=\"Dash__buttons-btn\"><h2 className=\"hvr-underline-from-left\">Catalog</h2></div>\r\n                    </Link>\r\n                    <Link to={`/profile`}>\r\n                        <div className=\"Dash__buttons-btn\"><h2 className=\"hvr-underline-from-left\">Profile</h2></div>\r\n                    </Link>\r\n                    <Link to={`/about`}>\r\n                        <div className=\"Dash__buttons-btn\"><h2 className=\"hvr-underline-from-left\">About</h2></div>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"Dash__option\">\r\n                    <div onClick={(e: any) => { \r\n                        e.preventDefault(); \r\n                        stores.authStore.signOut();\r\n                    }} className=\"Dash__option-btn\"><h2 className=\"hvr-underline-from-left\">Sing Out</h2></div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dash;\r\n","import React, { Component } from 'react';\r\nimport './Filter.scss';\r\n\r\nimport { observer } from 'mobx-react';\r\nimport stores from '../../stores/Stores';\r\n\r\ninterface FilterProps {\r\n}\r\n\r\ninterface FilterState {\r\n}\r\n\r\n@observer class Filter extends Component<FilterProps, FilterState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        stores.musicStore.readFilterGenre();\r\n        stores.musicStore.readFilterBand();\r\n        stores.musicStore.readFilterColor();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        stores.musicStore.cleanFilterGenre();\r\n        stores.musicStore.cleanFilterBand();\r\n        stores.musicStore.cleanFilterColor();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!stores.musicStore.filterGenre) {\r\n            return <div className=\"Filter\"><div className=\"Loading\"><p>Loading Filter...</p></div></div>;\r\n        }\r\n\r\n        if (!stores.musicStore.filterBand) {\r\n            return <div className=\"Filter\"><div className=\"Loading\"><p>Loading Filter...</p></div></div>;\r\n        }\r\n\r\n        if (!stores.musicStore.filterColor) {\r\n            return <div className=\"Filter\"><div className=\"Loading\"><p>Loading Filter...</p></div></div>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"Filter\">\r\n                <div className=\"Filter__genre\">\r\n                    <h2 className=\"Filter-title\">Genre</h2>\r\n                    <div className=\"Filter-genres\">\r\n                        {stores.musicStore.filterGenre.map((genre: any) => {\r\n                            return <h3 className=\"hvr-underline-from-right\" key={genre.id} onClick={(e: any) => {\r\n                                e.preventDefault();\r\n                                stores.musicStore.filterByGenre(genre.id);\r\n                            }\r\n                            }>{genre.name}</h3>;\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"Filter__band\">\r\n                    <h2 className=\"Filter-title\">Band</h2>\r\n                    <div className=\"Filter-bands\">\r\n                        {stores.musicStore.filterBand.map((band: any) => {\r\n                            return <h3 className=\"hvr-underline-from-right\" key={band.id} onClick={(e: any) => {\r\n                                e.preventDefault();\r\n                                stores.musicStore.filterByBand(band.name);\r\n                            }\r\n                            }>{band.name}</h3>;\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"Filter__color\">\r\n                    <h2 className=\"Filter-title\">Color</h2>\r\n                    <div className=\"Filter-colors\">\r\n                        {stores.musicStore.filterColor.map((color: any) => {\r\n                            return <div key={color.id} style={{ backgroundColor: `rgb(${color.name})` }} onClick={(e: any) => {\r\n                                e.preventDefault();\r\n                                stores.musicStore.filterByColor(color.id);\r\n                            }\r\n                            }></div>;\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport './SongCard.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SongCard = function (props: any) {\r\n    return (\r\n        <div className=\"SongCard\">\r\n            <Link to={`/song/${props.song.id}`}>\r\n                <svg viewBox=\"0 0 50 50\">\r\n                    <path d=\"M17.3,33.88V16.12L32.7,25Zm2-14.3V30.42L28.68,25Z\" />\r\n                </svg>\r\n                <div className=\"SongCard-title\"><h3>{props.song.name}</h3></div>\r\n            </Link>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SongCard;\r\n","import React, { Component } from 'react';\r\nimport './Catalog.scss';\r\n\r\nimport { observer } from 'mobx-react';\r\nimport stores from '../../stores/Stores';\r\nimport Filter from '../Filter/Filter';\r\nimport SongCard from '../SongCard/SongCard';\r\n\r\ninterface CatalogProps {\r\n}\r\n\r\ninterface CatalogState {\r\n}\r\n\r\n@observer class Catalog extends Component<CatalogProps, CatalogState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    stores.musicStore.readMusic();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    stores.musicStore.cleanMusicArray();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (stores.musicStore.musicArray.length == 0) {\r\n      return <div className=\"Catalog\"><div className=\"Loading\"><p>Loading Music...</p></div></div>;\r\n    }\r\n\r\n    return (\r\n      <section className=\"Catalog\">\r\n\r\n        <div className=\"Catalog__music scroll\">\r\n          {stores.musicStore.musicArray.map((song: any) => {\r\n            return (<SongCard key={song.id} song={song} />)\r\n          })}\r\n        </div>\r\n\r\n        <Filter />\r\n\r\n\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Catalog;\r\n","import React, { Component } from 'react';\r\nimport './About.scss';\r\n\r\nimport { observer } from 'mobx-react';\r\n\r\ninterface AboutProps {\r\n}\r\n\r\ninterface AboutState {\r\n\r\n}\r\n\r\n@observer class About extends Component<AboutProps, AboutState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"About\">\r\n\r\n                <svg className=\"About-logo\" viewBox=\"0 0 96 138\">\r\n                    <path d=\"M96,138H0V0H96ZM8,130H88V8H8Z\" />\r\n                    <path d=\"M35,38.46H27.32L25.89,42H20.64l8-18.2h5.07L41.8,42H36.44Zm-1.5-3.79-2.34-5.83-2.34,5.83Z\" />\r\n                    <path d=\"M60,23.8H65.1V37.92h8.68V42H60Z\" />\r\n                    <path d=\"M26.69,63.88H21.1V59.8H37.41v4.08H31.84V78H26.69Z\" />\r\n                    <path d=\"M73,74v4H58.35V59.8H72.63v4H63.45v3.07h8.08v3.84H63.45V74Z\" />\r\n                    <path d=\"M64.53,109.16H61.72V114H56.57V95.8h8.32a10.29,10.29,0,0,1,4.29.83A6.26,6.26,0,0,1,72,99a6.37,6.37,0,0,1,1,3.56A6.29,6.29,0,0,1,72,106a6.2,6.2,0,0,1-2.62,2.29L73.34,114H67.83Zm3.25-6.63a2.46,2.46,0,0,0-.81-2,3.52,3.52,0,0,0-2.39-.7H61.72v5.33h2.86a3.62,3.62,0,0,0,2.39-.68A2.48,2.48,0,0,0,67.78,102.53Z\" />\r\n                    <rect x=\"25.92\" y=\"101.56\" width=\"6.68\" height=\"6.68\" />\r\n                </svg>\r\n                <p className=\"About-text\">\r\n                    This web portal is part of a job for the ICESI University in Cali, Colombia. It is a FanPage made to pay homage to some outstanding artists in modern musical genres such as Rock and Metal.</p>\r\n                <p className=\"About-credits\">\r\n                    The songs are not mine, all the credits to the authors and bands mentioned here.</p>\r\n                <h3 className=\"About-brand\">by Santiago Ortiz Guevara</h3>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './GameCard.scss';\r\n\r\nimport stores from '../../stores/Stores';\r\n\r\ninterface GameCardProps {\r\n    game?: any\r\n}\r\n\r\ninterface GameCardState {\r\n    autor?: any,\r\n    listenerAutor?: any\r\n}\r\n\r\n@observer export default class GameCard extends Component<GameCardProps, GameCardState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            autor: null,\r\n            listenerAutor: null\r\n        }\r\n\r\n        this.getAutor = this.getAutor.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        stores.gameStore.findGameCard(this.props.game.autor, this.getAutor);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        stores.gameStore.cleanListenerGameCard(this.state.listenerAutor);\r\n    }\r\n\r\n    getAutor(a: any, listener: any): void {\r\n        this.setState({\r\n            autor: a,\r\n            listenerAutor: listener\r\n        });\r\n    }\r\n\r\n    onDragStart = (e: any, id: string) => {\r\n        e.dataTransfer.setData(\"id\", id);\r\n        //console.log(\"Dragging\", id);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.autor == null) {\r\n            return (<div className=\"GameCard\">\r\n                <h5 > {this.props.game.name} </h5>\r\n                <h5> Loading... </h5>\r\n            </div>);\r\n        }\r\n\r\n        return (\r\n            <Link to={`/game/${this.props.game.idGame}`}>\r\n                <div draggable onDragStart={(e: any)=> this.onDragStart(e, this.props.game.idGame)} className=\"GameCard\">\r\n                    <h5 > {this.props.game.name} </h5>\r\n                    <p> {this.state.autor.displayName} </p>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { style, classes } from \"typestyle\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Tooltip from 'react-tooltip-lite';\r\n\r\nimport './Guilds.scss';\r\n\r\nimport { observer } from 'mobx-react';\r\nimport stores from '../../stores/Stores';\r\nimport GameCard from '../GameCard/GameCard';\r\n\r\ninterface GuildProps {\r\n}\r\n\r\ninterface GuildState {\r\n    context?: number,\r\n    styleDelete?: any\r\n}\r\n\r\n@observer class Guilds extends Component<GuildProps, GuildState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            context: 0,\r\n            styleDelete: {}\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        stores.guildStore.readGuilds();\r\n        stores.gamesStore.setListenerGames(stores.authStore.user.uid);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        stores.gamesStore.cleanListenerGames();\r\n        stores.gamesStore.cleanGames();\r\n        stores.guildStore.stopGuilds();\r\n    }\r\n\r\n    onDragOver = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        let s = style({\r\n            borderWidth: 5,\r\n            borderColor: \"rgb(250,87,75)\"\r\n        });\r\n\r\n        this.setState({\r\n            styleDelete: s\r\n        });\r\n    }\r\n\r\n    onDragLeave = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        let s = style({\r\n            borderWidth: 8,\r\n            borderColor: \"rgb(25, 25, 25)\"\r\n        });\r\n\r\n        this.setState({\r\n            styleDelete: s\r\n        });\r\n    }\r\n\r\n    onDrop = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        let id = e.dataTransfer.getData(\"id\");\r\n\r\n        //console.log(\"Dropping\", id);\r\n\r\n        stores.gamesStore.deleteGame(id);\r\n\r\n        let s = style({\r\n            borderWidth: 8,\r\n            borderColor: \"rgb(25, 25, 25)\"\r\n        });\r\n\r\n        this.setState({\r\n            styleDelete: s\r\n        });\r\n    }\r\n\r\n    getGuildContext() {\r\n        switch (this.state.context) {\r\n            case 0:\r\n\r\n                return (\r\n                    <div className=\"Guilds-own\">\r\n\r\n                        <div className=\"Guilds-section\">\r\n\r\n                            <div><h3>Your Matches</h3></div>\r\n                            <div><h4 onClick={(e: any) => {\r\n                                e.preventDefault();\r\n                                this.setState({ context: 1 });\r\n                            }} className=\"hvr-underline-from-left\">Other Matches</h4></div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"Guilds-cont\">\r\n                            <div className=\"Guilds-matches scroll\">\r\n                                {stores.gamesStore.ourGames && stores.gamesStore.ourGames.map((game: any) => {\r\n                                    return <GameCard key={game.idGame} game={game} />;\r\n                                })}\r\n                            </div>\r\n\r\n                            <div className=\"Guilds-options\">\r\n                                <input className=\"Guilds-search\" placeholder=\"Search by name\" type=\"text\" />\r\n                                <Link to=\"/newmatch\">\r\n                                    <div className=\"Guilds-create\"><h4>Create Match</h4></div>\r\n                                </Link>\r\n                                <Tooltip direction=\"left\" hoverDelay={0} content=\"Drop elements to delete\">\r\n                                    <div onDrop={(e: any) => this.onDrop(e)} onDragOver={(e: any) => this.onDragOver(e)} onDragLeave={(e: any) => this.onDragLeave(e)} className={classes(this.state.styleDelete, \"Guilds-delete\")}><h4>Delete Match</h4></div>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n                break;\r\n\r\n            case 1:\r\n                return (\r\n                    <div className=\"Guilds-others\">\r\n\r\n                        <div className=\"Guilds-section\">\r\n                            <div><h3>Other Matches</h3></div>\r\n                            <div><h4 onClick={(e: any) => {\r\n                                e.preventDefault();\r\n                                this.setState({ context: 0 });\r\n                            }} className=\"hvr-underline-from-left\">Your Matches</h4></div>\r\n                        </div>\r\n\r\n                        <div className=\"Guilds-cont\">\r\n                            <div className=\"Guilds-matches scroll\">\r\n                                {stores.gamesStore.otherGames && stores.gamesStore.otherGames.map((game: any) => {\r\n                                    return <GameCard key={game.idGame} game={game} />;\r\n                                })}\r\n                            </div>\r\n\r\n                            <div className=\"Guilds-options\">\r\n                                <input className=\"Guilds-search\" placeholder=\"Search by name\" type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                )\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"Guilds\">\r\n\r\n                <div className=\"Guilds-score\">\r\n                    {stores.guildStore.guilds.map((guild: any) => {\r\n\r\n                        let hoverStyle = style({\r\n                            $nest: {\r\n                                '&:hover': {\r\n                                    color: `rgb(${guild.color})`,\r\n                                    borderColor: `rgb(${guild.color})`,\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        return (\r\n                            <div key={guild.id} className=\"Guilds-each\">\r\n                                <h3 className={classes(hoverStyle)} >{guild.points}</h3>\r\n                                <h5>{guild.name}</h5>\r\n                            </div>)\r\n                    })}\r\n                </div>\r\n\r\n                {this.getGuildContext()}\r\n\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Guilds;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { style, classes } from \"typestyle\";\r\n\r\nimport Tooltip from 'react-tooltip-lite';\r\n\r\nimport './Profile.scss';\r\n\r\nimport { observer } from 'mobx-react';\r\n\r\nimport stores from '../../stores/Stores';\r\n\r\ninterface ProfileProps {\r\n  history?: any\r\n}\r\n\r\ninterface ProfileState {\r\n}\r\n\r\n@observer class Profile extends Component<ProfileProps, ProfileState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    stores.guildStore.readGuilds();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    stores.guildStore.stopGuilds();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!stores.authStore.user) {\r\n      return <div className=\"Loading\"><p>Loading User info...</p></div>;\r\n    }\r\n\r\n    if (stores.guildStore.guilds.length == 0) {\r\n      return <div className=\"Loading\"><p>Loading User guild...</p></div>;\r\n    }\r\n\r\n    return (\r\n      <section className=\"Profile\">\r\n\r\n        <div className=\"Profile-cont\">\r\n\r\n          <div className=\"Profile-info\">\r\n\r\n            <h1 className=\"Profile-title\">INFO</h1>\r\n\r\n            <div className=\"Profile-input\">\r\n\r\n              <h3>Display Name</h3>\r\n              <input disabled value={stores.authStore.user.displayName} />\r\n            </div>\r\n\r\n            <div className=\"Profile-input\">\r\n              <h3>Email</h3>\r\n              <input disabled value={stores.authStore.user.email} />\r\n            </div>\r\n\r\n            <div className=\"Profile-gameInfo\">\r\n\r\n              <div className=\"Profile-gameLeft\">\r\n\r\n                <h3>Games</h3>\r\n                <input disabled value={stores.authStore.user.games} />\r\n              </div>\r\n\r\n              <div className=\"Profile-gameRight\">\r\n\r\n                <h3>Victories</h3>\r\n                <input disabled value={stores.authStore.user.victories} />\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"Profile-guilds\">\r\n\r\n            <h1 className=\"Profile-title\">\r\n              <Tooltip hoverDelay={0} content=\"Select your guild\">\r\n                GUILD</Tooltip></h1>\r\n\r\n            <div className=\"Profile-contGuild\">\r\n\r\n              {stores.guildStore.guilds.map((guild: any) => {\r\n                let hoverStyle = style({\r\n                  $nest: {\r\n                    '&:hover': {\r\n                      color: `rgb(${guild.color})`,\r\n                    }\r\n                  }\r\n                });\r\n\r\n                let selectedStyle = style({\r\n                  color: `rgb(${guild.color})`,\r\n                  borderColor: `rgb(${guild.color})`,\r\n                });\r\n\r\n                //classes(class, class) write multiple classes\r\n\r\n                if (stores.authStore.user.guild == guild.id) {\r\n                  return (<h3 key={guild.id}\r\n                    className={classes(\"Profile-guild\", selectedStyle)}>{guild.name}</h3>)\r\n                } else {\r\n                  return (<h3 key={guild.id}\r\n                    className={classes(\"Profile-guild\", hoverStyle)}\r\n                    onClick={(e: any) => {\r\n                      e.preventDefault();\r\n                      //update user guild\r\n                      stores.authStore.updateTeam(guild.id);\r\n                    }}\r\n                  >{guild.name}</h3>)\r\n                }\r\n              })}\r\n\r\n            </div>\r\n\r\n            <h3 onClick={(e: any) => {\r\n              e.preventDefault();\r\n            }} className=\"Profile-update hvr-underline-from-center\">UPDATE</h3>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport './Auth.scss';\r\n\r\nimport { observer } from 'mobx-react';\r\nimport stores from '../../stores/Stores';\r\n\r\ninterface AuthProps {\r\n  history?: any\r\n}\r\n\r\ninterface AuthState {\r\n  form?: number,\r\n  displayName?: string,\r\n  email?: string,\r\n  password?: string\r\n}\r\n\r\n@observer class Auth extends Component<AuthProps, AuthState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      form: 0,\r\n      email: \"\",\r\n      password: \"\",\r\n      displayName: \"\"\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  handleKeyPressSignIn = (event: any) => {\r\n    if(event.key == 'Enter'){\r\n      if (this.state.email && this.state.email !== \"\" && this.state.password && this.state.password !== \"\") {\r\n        stores.authStore.signIn(this.state.email, this.state.password);\r\n        this.setState({\r\n          email: \"\",\r\n          password: \"\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPressRegister = (event: any) => {\r\n    if(event.key == 'Enter'){\r\n      if (this.state.displayName && this.state.displayName !== \"\" && this.state.email && this.state.email !== \"\" && this.state.password && this.state.password !== \"\") {\r\n        stores.authStore.createNewUser(this.state.displayName, this.state.email, this.state.password);\r\n        this.setState({\r\n          email: \"\",\r\n          password: \"\",\r\n          displayName: \"\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getFormContext() {\r\n    switch (this.state.form) {\r\n      case 0:\r\n        return <div className=\"SignIn\">\r\n          <h1 className=\"SignIn-title\">Sign In</h1>\r\n          <div className=\"SignIn-container\">\r\n            <input onKeyPress={this.handleKeyPressSignIn} onChange={(e: any) => this.setState({ displayName: e.target.value })} placeholder=\"Nickname\" className=\"SignIn-input\" type=\"hidden\" />\r\n            <input onKeyPress={this.handleKeyPressSignIn} onChange={(e: any) => this.setState({ email: e.target.value })} placeholder=\"Email\" className=\"SignIn-input\" type=\"email\" />\r\n            <input onKeyPress={this.handleKeyPressSignIn} onChange={(e: any) => this.setState({ password: e.target.value })} placeholder=\"Password\" className=\"SignIn-input\" type=\"password\" />\r\n          </div>\r\n          <div className=\"SignIn-containerBtn\">\r\n            <h3 onClick={(e: any) => {\r\n              e.preventDefault();\r\n              this.setState({\r\n                form: 1\r\n              });\r\n            }} className=\"SignIn-btn hvr-underline-from-left\" >SIGN UP</h3>\r\n            <h3 onClick={(e: any) => {\r\n              e.preventDefault();\r\n              if (this.state.email && this.state.email !== \"\" && this.state.password && this.state.password !== \"\") {\r\n                stores.authStore.signIn(this.state.email, this.state.password);\r\n                this.setState({\r\n                  email: \"\",\r\n                  password: \"\"\r\n                });\r\n              }\r\n            }} className=\"SignIn-btn hvr-underline-from-right\" >ACCEPT</h3>\r\n          </div>\r\n        </div>;\r\n        break;\r\n      case 1:\r\n        return <div className=\"SignUp\">\r\n          <h1 className=\"SignUp-title\">Sign Up</h1>\r\n          <div className=\"SignUp-container\">\r\n            <input onKeyPress={this.handleKeyPressRegister} onChange={(e: any) => this.setState({ displayName: e.target.value })} placeholder=\"Nickname\" className=\"SignUp-input\" type=\"text\" />\r\n            <input onKeyPress={this.handleKeyPressRegister} onChange={(e: any) => this.setState({ email: e.target.value })} placeholder=\"Email\" className=\"SignUp-input\" type=\"email\" />\r\n            <input onKeyPress={this.handleKeyPressRegister} onChange={(e: any) => this.setState({ password: e.target.value })} placeholder=\"Password\" className=\"SignUp-input\" type=\"password\" />\r\n          </div>\r\n          <div className=\"SignUp-containerBtn\">\r\n            <h3 onClick={(e: any) => {\r\n              e.preventDefault();\r\n              this.setState({\r\n                form: 0\r\n              });\r\n            }} className=\"SignUp-btn hvr-underline-from-left\" >SIGN IN</h3>\r\n            <h3 onClick={(e: any) => {\r\n              e.preventDefault();\r\n              if (this.state.displayName && this.state.displayName !== \"\" && this.state.email && this.state.email !== \"\" && this.state.password && this.state.password !== \"\") {\r\n                stores.authStore.createNewUser(this.state.displayName, this.state.email, this.state.password);\r\n                this.setState({\r\n                  email: \"\",\r\n                  password: \"\",\r\n                  displayName: \"\"\r\n                });\r\n              }\r\n            }} className=\"SignUp-btn hvr-underline-from-right\" >ACCEPT</h3>\r\n          </div>\r\n        </div>;\r\n        break;\r\n    }\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <section className=\"Auth\">\r\n\r\n        {this.getFormContext()}\r\n\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import React, { Component } from 'react';\r\nimport { style, classes } from \"typestyle\";\r\nimport Tooltip from 'react-tooltip-lite';\r\n\r\nimport './CreateGame.scss';\r\n\r\nimport { observer } from 'mobx-react';\r\nimport stores from '../../stores/Stores';\r\n\r\ninterface CreateGameProps {\r\n    history?: any\r\n}\r\n\r\ninterface CreateGameState {\r\n    name?: string\r\n}\r\n\r\n@observer class CreateGame extends Component<CreateGameProps, CreateGameState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\"\r\n        }\r\n\r\n        this.redirectGame = this.redirectGame.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        stores.guildStore.readGuilds();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        stores.guildStore.stopGuilds();\r\n        stores.guildStore.cleanGuilds();\r\n    }\r\n\r\n    redirectGame(id: string): void {\r\n        //add points to the guild of game created\r\n        stores.guildStore.addPointToGuild(stores.authStore.user);\r\n\r\n        //go to the new game\r\n        this.props.history.push(`/game/${id}`);\r\n    }\r\n\r\n    handleKeyPressCreate = (event: any) => {\r\n        if (event.key == 'Enter') {\r\n            if (this.state.name && this.state.name !== \"\") {\r\n                stores.gamesStore.createGame(stores.authStore.user.uid, this.state.name, this.redirectGame);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"CreateGame\">\r\n\r\n                <div className=\"CreateGame-cont\">\r\n                    <h1 className=\"CreateGame-title\">\r\n                        New Match\r\n                    </h1>\r\n                    <Tooltip styles={{width: '100%'}} hoverDelay={0} content=\"Max. 8 characters\">\r\n                        <input onKeyPress={this.handleKeyPressCreate} maxLength={8} onChange={(e: any) => this.setState({ name: e.target.value })} placeholder=\"Match Title\" className=\"CreateGame-input\" type=\"text\" />\r\n                    </Tooltip>\r\n                    <h3 onClick={(e: any) => {\r\n                        e.preventDefault();\r\n                        if (this.state.name && this.state.name !== \"\") {\r\n                            stores.gamesStore.createGame(stores.authStore.user.uid, this.state.name, this.redirectGame);\r\n                        }\r\n                    }} className=\"CreateGame-create hvr-underline-from-center\">CREATE</h3>\r\n\r\n                </div>\r\n\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateGame;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport './Comment.scss';\r\n\r\nimport stores from '../../stores/Stores';\r\n\r\ninterface CommentProps {\r\n    doc?: any\r\n}\r\n\r\ninterface CommentState {\r\n    autor?: any,\r\n    listenerAutor?: any\r\n}\r\n\r\n@observer export default class Comment extends Component<CommentProps, CommentState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            autor: null,\r\n            listenerAutor: null\r\n        }\r\n\r\n        this.getAutor = this.getAutor.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        stores.commentStore.findCommentAutor(this.props.doc.uid, this.getAutor);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        stores.commentStore.cleanListernerCommentAutor(this.state.listenerAutor);\r\n    }\r\n\r\n    getAutor(a: any, listener: any): void {\r\n        this.setState({\r\n            autor: a,\r\n            listenerAutor: listener\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.autor == null) {\r\n            return (<div className=\"Comment\">\r\n                <h5> Loading... </h5>\r\n                <p> {this.props.doc.data} </p>\r\n            </div>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"Comment\">\r\n                <h5 style={{ color: `rgb(${this.state.autor.color})` }}> {this.state.autor.displayName} </h5>\r\n                <p> {this.props.doc.data} </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { style, classes } from \"typestyle\";\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from './settings.json'\r\n\r\nimport './Game.scss';\r\n\r\nimport stores from '../../stores/Stores';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Comment from '../Comment/Comment';\r\n\r\ninterface GameProps {\r\n    match?: any\r\n}\r\n\r\ninterface GameState {\r\n    comments?: any[],\r\n    listenerComments?: () => void\r\n}\r\n\r\n@observer class Game extends Component<GameProps, GameState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            comments: [],\r\n            listenerComments: () => { }\r\n        }\r\n    }\r\n\r\n    getId() {\r\n        return this.props.match.params.id;\r\n    }\r\n\r\n    componentDidMount() {\r\n        stores.guildStore.readGuilds();\r\n        stores.gameStore.findGame(this.getId());\r\n        stores.gameStore.findComments(this.getId());\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        stores.gameStore.cleanListenerComments(this.state.listenerComments);\r\n        stores.guildStore.cleanGuilds();\r\n        stores.gameStore.cleanGame();\r\n    }\r\n\r\n    render() {\r\n\r\n        const defaultOptions = {\r\n            loop: true,\r\n            autoplay: true,\r\n            animationData: animationData,\r\n            rendererSettings: {\r\n                preserveAspectRatio: 'xMidYMid slice'\r\n            }\r\n        };\r\n\r\n        if (!stores.gameStore.game) {\r\n            return <div className=\"Loading\"><p>Loading Game...</p></div>;\r\n        }\r\n\r\n        return (\r\n            <section className=\"Game\">\r\n\r\n                <div className=\"Game-cont\">\r\n\r\n                    <div className=\"Game-left\">\r\n\r\n                        <Lottie options={defaultOptions}\r\n                            height={300}\r\n                            width={300} />\r\n\r\n                        <h4>Developing...</h4>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"Game-right\">\r\n\r\n                        <div className=\"Game-score\">\r\n                            <div className=\"Game-playerA\">\r\n                                <h2>0</h2>\r\n                                <h4>Player A</h4>\r\n                            </div>\r\n\r\n                            <div className=\"Game-div\"></div>\r\n\r\n                            <div className=\"Game-playerB\">\r\n                                <h2>0</h2>\r\n                                <h4>Player B</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"Game-comments scroll\">\r\n                            {stores.gameStore.comments.map((doc: any) => {\r\n                                return (<Comment key={doc.id} doc={doc} />)\r\n                            })}\r\n                        </div>\r\n\r\n                        <input type=\"text\" onKeyPress={(e: any) => {\r\n                            if (e.which == 13 || e.keyCode == 13) {\r\n                                stores.gameStore.writeComment(e.target.value, stores.authStore.user.uid);\r\n                                e.target.value = \"\";\r\n                            }\r\n                        }} placeholder=\"Your comment...\" id=\"inputComment\" />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\n\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch, HashRouter } from 'react-router-dom';\r\nimport './App.scss';\r\n\r\nimport Home from '../Home/Home'\r\nimport SongView from '../SongView/SongView'\r\nimport ErrorPage from '../ErrorPage/ErrorPage'\r\nimport Dash from '../Dash/Dash';\r\nimport Catalog from '../Catalog/Catalog';\r\nimport About from '../About/About';\r\nimport Guilds from '../Guilds/Guilds';\r\nimport Profile from '../Profile/Profile';\r\nimport Auth from '../Auth/Auth';\r\nimport CreateGame from '../CreateGame/CreateGame';\r\nimport Game from '../Game/Game';\r\n\r\nimport stores from '../../stores/Stores';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { style, classes } from \"typestyle\";\r\n\r\ninterface AppProps {\r\n  history?: any\r\n}\r\n\r\ninterface AppState {\r\n  userState?: boolean\r\n}\r\n\r\ntoast.configure({\r\n  autoClose: 3000,\r\n  draggable: false,\r\n  //etc you get the idea\r\n});\r\n\r\nclass App extends Component<AppProps, AppState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userState: false,\r\n    }\r\n\r\n    this.setUserState = this.setUserState.bind(this);\r\n    //console.log();\r\n  }\r\n\r\n  componentDidMount() {\r\n    stores.authStore.userStateListener(this.setUserState);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  setUserState(state: boolean): void {\r\n    this.setState({ userState: state });\r\n    if (state) {\r\n      this.notifyUserState(\"Authentication Success\");\r\n    } else {\r\n      this.notifyUserState(\"Disconnected\");\r\n    }\r\n  }\r\n\r\n  notifyUserState(data: string) {\r\n\r\n    let styleBar = style({\r\n      background: 'rgb(25, 25, 25)'\r\n    });\r\n\r\n    let styleFont = style({\r\n      color: 'rgb(100, 100, 100)',\r\n      fontFamily: 'Rajdhani',\r\n      fontSize: 14\r\n    });\r\n\r\n    let styleFoast = style({\r\n      background: 'rgb(252, 252, 252)'\r\n    });\r\n\r\n    toast(data, {\r\n      className: styleFoast,\r\n      bodyClassName: styleFont,\r\n      progressClassName: styleBar\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <HashRouter>\r\n\r\n          <Dash />\r\n\r\n          {this.state.userState ?\r\n\r\n            <Switch>\r\n\r\n              <Route path=\"/\" component={Home} exact />\r\n              <Route path=\"/auth\" component={Auth} exact />\r\n              <Route path=\"/guilds\" component={Guilds} exact />\r\n              <Route path=\"/newmatch\" component={CreateGame} exact />\r\n              <Route path=\"/catalog\" component={Catalog} exact />\r\n              <Route path=\"/song/:id\" component={SongView} exact />\r\n              <Route path=\"/game/:id\" component={Game} exact />\r\n              <Route path=\"/profile\" component={Profile} exact />\r\n              <Route path=\"/about\" component={About} exact />\r\n              <Route component={ErrorPage} />\r\n\r\n            </Switch>\r\n\r\n            : <Auth />}\r\n\r\n        </HashRouter>\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}