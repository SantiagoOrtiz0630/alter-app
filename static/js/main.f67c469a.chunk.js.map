{"version":3,"sources":["components/Home/Home.tsx","config/firebaseConfig.ts","stores/AuthStore.tsx","stores/SongStore.tsx","stores/MusicStore.tsx","stores/GameStore.tsx","stores/GuildStore.tsx","stores/CommentStore.tsx","stores/GamesStore.tsx","stores/Stores.tsx","utils/P5Wrapper/P5Visualizer.js","components/SongView/SongView.tsx","components/ErrorPage/ErrorPage.tsx","components/Dash/Dash.tsx","components/Filter/Filter.tsx","components/SongCard/SongCard.tsx","components/Catalog/Catalog.tsx","components/About/About.tsx","components/GameCard/GameCard.tsx","components/Guilds/Guilds.tsx","components/Profile/Profile.tsx","components/Auth/Auth.tsx","components/CreateGame/CreateGame.tsx","components/Comment/Comment.tsx","components/Game/Game.tsx","components/App/App.tsx","serviceWorker.js","index.tsx"],"names":["Home","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","songs","react_default","a","createElement","className","id","viewBox","d","x","y","width","height","Component","require","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","storage","auth","AuthStore","initializerDefineProperty","_descriptor","displayName","email","password","createUserWithEmailAndPassword","then","data","min","max","u","uid","user","guild","Math","floor","random","games","victories","collection","doc","set","console","log","catch","error","code","errorMessage","message","signInWithEmailAndPassword","_this2","signOut","setUserOutListener","_this3","onAuthStateChanged","get","exists","observable","action","SongStore","SongStore_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","cleanSong","where","querySnapshot","forEach","songActual","name","album","year","genre","colors","a_info","autor","idImg","readColors","readGenreActual","readSongFile","readImgFile","cleanGenres","cleanGenre","genreSong","parseInt","genresActual","genreActual","push","cleanSongFile","ref","child","concat","getDownloadURL","songUrl","songFile","_this4","cleanImgFile","imgUrl","imgFile","_this5","cleanColors","colorId","colorsActual","colorDB","color","MusicStore","MusicStore_descriptor","MusicStore_descriptor2","MusicStore_descriptor3","MusicStore_descriptor4","MusicStore_descriptor5","cleanMusicArray","orderBy","musicArray","musicArrayBackup","song","cleanFilterGenre","filterGenre","cleanFilterBand","filterBand","band","cleanFilterColor","filterColor","bandName","filter","genreId","genreIdSong","_this6","colorIdSong","GameStore","GameStore_descriptor","GameStore_descriptor2","GameStore_descriptor3","GameStore_descriptor4","GameStore_descriptor5","idGame","cleanGame","g","game","listenerComments","onSnapshot","cleanComments","c","timestamp","comments","setAutor","listenerAutor","newCom","Date","getTime","add","docRef","playerA","playerB","GuildStore","listenerGuild","GuildStore_descriptor","cleanGuilds","guilds","points","object","find","gu","newPoints","update","e","CommentStore","getAutor","GamesStore","listenerGames","GamesStore_descriptor","GamesStore_descriptor2","GamesStore_descriptor3","GamesStore_descriptor4","cleanGames","ourGames","ourGamesBackup","otherGames","otherGamesBackup","delete","redirectGame","Stores","authStore","songStore","musicStore","gameStore","gamesStore","guildStore","commentStore","P5Visualizer","canvas","p5","p","spectrum","fft","s","document","querySelector","clientWidth","clientHeight","audioSpect","btn","link","preload","soundFormats","loadSound","FFT","setup","createCanvas","WEBGL","noStroke","waveform","Array","i","length","b","loop","frameRate","myCustomRedrawAccordingToNewPropsHandler","split","vol","val","setVolume","draw","marX","marY","tamX","tamY","background","rectMode","CORNER","translate","fill","rect","noFill","CENTER","pop","calculate","setButtons","play","addEventListener","changePlay","stop","analyze","j","abs","prom","index","n","isPlaying","pause","windowResized","resizeCanvas","wrapper","newprops","remove","SongView","genres","genreString","volume","match","params","stores","readSong","getId","setState","P5Visualizer_P5Visualizer","type","defaultValue","onChange","preventDefault","target","value","src","map","key","style","backgroundColor","onClick","ErrorPage","Dash","react_router_dom","to","Filter","readFilterGenre","readFilterBand","readFilterColor","filterByGenre","filterByBand","filterByColor","SongCard","Catalog","readMusic","components_SongCard_SongCard","components_Filter_Filter","About","GameCard","onDragStart","dataTransfer","setData","bind","assertThisInitialized","findGameCard","cleanListenerGameCard","listener","draggable","Guilds","onDragOver","borderWidth","borderColor","styleDelete","onDragLeave","onDrop","getData","deleteGame","context","readGuilds","setListenerGames","cleanListenerGames","stopGuilds","GameCard_GameCard_GameCard","placeholder","dist_default","direction","hoverDelay","content","classes","hoverStyle","$nest","&:hover","getGuildContext","Profile","disabled","selectedStyle","updateTeam","Auth","handleKeyPressSignIn","event","signIn","handleKeyPressRegister","createNewUser","form","onKeyPress","getFormContext","CreateGame","handleKeyPressCreate","createGame","addPointToGuild","history","styles","maxLength","Comment","findCommentAutor","cleanListernerCommentAutor","Game","findGame","findComments","cleanListenerComments","defaultOptions","autoplay","animationData","rendererSettings","preserveAspectRatio","react_lottie_dist_default","options","Comment_Comment_Comment","which","keyCode","writeComment","toast","configure","autoClose","App","userState","setUserState","userStateListener","notifyUserState","bodyClassName","progressClassName","basename","components_Dash_Dash","react_router","path","component","exact","components_Auth_Auth","react_toastify","Boolean","window","location","hostname","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f67c469a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Home.scss';\n\nimport { observer } from 'mobx-react';\n\nimport stores from '../../stores/Stores';\n\ninterface HomeProps {\n  match?: any,\n  history?: any\n}\n\ninterface HomeState {\n  songs?: any;\n}\n\n@observer class Home extends Component<HomeProps, HomeState> {\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      songs: null\n    }\n\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillUnmount() {\n  }\n\n  render() {\n\n    return (\n      <section className=\"Home\">\n\n                <svg className=\"Home-logo\" id=\"logo\" viewBox=\"0 0 96 138\">\n                    <path d=\"M96,138H0V0H96ZM8,130H88V8H8Z\" />\n                    <path d=\"M35,38.46H27.32L25.89,42H20.64l8-18.2h5.07L41.8,42H36.44Zm-1.5-3.79-2.34-5.83-2.34,5.83Z\" />\n                    <path d=\"M60,23.8H65.1V37.92h8.68V42H60Z\" />\n                    <path d=\"M26.69,63.88H21.1V59.8H37.41v4.08H31.84V78H26.69Z\" />\n                    <path d=\"M73,74v4H58.35V59.8H72.63v4H63.45v3.07h8.08v3.84H63.45V74Z\" />\n                    <path d=\"M64.53,109.16H61.72V114H56.57V95.8h8.32a10.29,10.29,0,0,1,4.29.83A6.26,6.26,0,0,1,72,99a6.37,6.37,0,0,1,1,3.56A6.29,6.29,0,0,1,72,106a6.2,6.2,0,0,1-2.62,2.29L73.34,114H67.83Zm3.25-6.63a2.46,2.46,0,0,0-.81-2,3.52,3.52,0,0,0-2.39-.7H61.72v5.33h2.86a3.62,3.62,0,0,0,2.39-.68A2.48,2.48,0,0,0,67.78,102.53Z\" />\n                    <rect x=\"25.92\" y=\"101.56\" width=\"6.68\" height=\"6.68\" />\n                </svg>\n                <p className=\"Home-text\">\n                    This section will be the HomePage of the App.</p>\n                <h3 className=\"Home-brand\">cooming soon...</h3>\n            </section>\n    );\n  }\n}\n\nexport default Home;\n","import * as firebase from 'firebase/app';\n\n// Required for side-effects\nrequire(\"firebase/database\");\nrequire(\"firebase/storage\");\nrequire(\"firebase/auth\");\nrequire(\"firebase/firestore\");\n\nlet config = {\n    apiKey: \"AIzaSyBxIWCPFYm71xO2AWF5adN7zh_aq8s-TAM\",\n    authDomain: \"taller-app-a3390.firebaseapp.com\",\n    databaseURL: \"https://taller-app-a3390.firebaseio.com\",\n    projectId: \"taller-app-a3390\",\n    storageBucket: \"taller-app-a3390.appspot.com\",\n    messagingSenderId: \"445124244240\"\n  };\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const auth =  firebase.auth();\n\nexport default db;","import { observable, action, computed, extendObservable } from 'mobx';\n\nexport default class AuthStore {\n\n    db: any = null;\n    auth: any = null;\n\n    constructor(db: any, auth: any) {\n        this.db = db;\n        this.auth = auth;\n    }\n\n    @observable user: any = null;\n\n    @action createNewUser(displayName: string, email: string, password: string) {\n        this.auth.createUserWithEmailAndPassword(email, password)\n            .then((data: any) => {\n                //add user to db\n\n                let u = {\n                    uid: data.user.uid,\n                    email: data.user.email,\n                    guild: getRandomInt(0, 3),\n                    games: 0,\n                    displayName,\n                    victories: 0\n                };\n\n                //adding user info to db\n                this.db.collection(\"users\").doc(data.user.uid).set(u)\n                    .then(() => {\n                        console.log(\"Document successfully written!\");\n                    })\n                    .catch((error: any) => {\n                        console.error(\"Error writing document: \", error);\n                    });\n                //add user to db\n\n            }).catch((error: any) => {\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // ...\n                console.log(\"Cant sign up\", errorMessage);\n            });\n    }\n\n    @action signIn(email: string, password: string) {\n        this.auth.signInWithEmailAndPassword(email, password).catch((error: any) => {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(\"Cant sign in\", errorMessage);\n            // ...\n        });\n    }\n\n    @action updateTeam(id: number) {\n\n        this.user.guild = id;\n\n        // search user in db\n        this.db.collection(\"users\").doc(this.user.uid).set(this.user).then((doc: any) => {\n            console.log(\"User's Guild updated to: \" + this.user.guild);\n        }).catch((error: any) => {\n            console.log(\"Error getting user in db:\", error);\n        });\n        // search user un db\n    }\n\n    @action signOut() {\n        this.auth.signOut().then(() => {\n            // Sign-out successful.\n            //console.log(\"Sign-out successful!\");\n        }).catch((error: any) => {\n            // An error happened.\n        });\n    }\n\n    @action userStateListener(setUserOutListener: (state: boolean) => void){\n        this.auth.onAuthStateChanged((user: any) => {\n            if (user) {\n\n                // search user in db\n                this.db.collection(\"users\").doc(user.uid).get().then((doc: any) => {\n                    if (doc.exists) {\n\n                        // User is signed in.\n                        let u = {\n                            displayName: doc.data().displayName,\n                            email: user.email,\n                            uid: user.uid,\n                            guild: doc.data().guild,\n                            games: doc.data().games,\n                            victories: doc.data().victories,\n                        }\n\n                        // ...\n\n                        this.user = u;\n                        console.log(\"User conected, in db: \", this.user);\n                        setUserOutListener(true);\n                    } else {\n                        // doc.data() will be undefined in this case\n                        console.log(\"No such user in db!\");\n                    }\n                }).catch((error: any) => {\n                    console.log(\"Error getting user in db:\", error);\n                });\n                // search user un db\n\n            } else {\n                // User is signed out.\n                // ...\n                this.user = null;\n                console.log(\"User is signed out!\");\n\n                setUserOutListener(false);\n            }\n        });\n    }\n    \n}\n\n\nfunction getRandomInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }","import { observable, action } from 'mobx';\n\nexport default class SongStore {\n\n    db: any = null;\n    storage: any = null;\n\n    constructor(db: any, storage: any){\n        this.db = db;\n        this.storage = storage;\n    }\n\n    @observable songActual: any = null;\n\n    @observable genreActual: string = \"\";\n\n    @observable genresActual: any = null;\n\n    @observable songFile: any = null;\n    @observable imgFile: any = null;\n\n    @observable colorsActual: any = null;\n\n    /* This method read the data from realtime board of firebase, with the method on, read all the objects and update when anyone is edited */\n\n    @action readSong(id: number) {\n        this.cleanSong();\n\n        this.db.collection(\"songs\").where('id', '==', id).get().then((querySnapshot: any) => {\n\n            querySnapshot.forEach((doc: any) => {\n\n                this.songActual = {\n                    name: doc.data().name,\n                    id: doc.data().id,\n                    album: doc.data().album,\n                    year: doc.data().year,\n                    genre: doc.data().genre,\n                    colors: doc.data().colors,\n                    a_info: doc.data().a_info,\n                    autor: doc.data().autor,\n                    idImg: doc.data().idImg\n                }\n\n                console.log(\"The Song found is: \", this.songActual.name);\n\n                this.readColors();\n                this.readGenreActual();\n                this.readSongFile(doc.data().id);\n                this.readImgFile(doc.data().idImg);\n\n                return;\n            });\n        }).catch(function(error: any) {\n            console.log(\"Error getting documents: \", error);\n        });\n\n    }\n\n    /* */\n\n    @action readGenreActual() {\n        this.cleanGenres();\n        this.cleanGenre();\n\n        if (this.songActual && this.songActual.genre !== '') {\n\n            this.songActual.genre.forEach((genreSong: any) => {\n                let id = parseInt(genreSong);\n\n                this.db.collection(\"genres\").where('id', '==', id).get().then((querySnapshot: any) => {\n                    this.genresActual = [];\n\n                    querySnapshot.forEach((doc: any) => {\n\n                        if (this.genreActual === \"\") {\n                            this.genreActual = doc.data().name;\n                        } else {\n                            this.genreActual += \", \" + doc.data().name;\n                        }\n\n                        let genre = {\n                            name: doc.data().name,\n                            id: doc.data().id\n                        }\n\n                        this.genresActual.push(genre);\n                    });\n                }).catch((error: any) => {\n                    console.log(\"Error getting documents: \", error);\n                });\n            });\n        }\n    }\n\n    @action readSongFile(id: number) {\n        this.cleanSongFile();\n\n        let ref = this.storage.ref();\n\n\n        ref.child(`songs/${id}.mp3`).getDownloadURL().then((songUrl: any) => {\n            // `url` is the download URL of your archive\n\n            this.songFile = songUrl;\n\n        }).catch(function (error: any) {\n            // Handle any errors\n        });\n    }\n\n    @action readImgFile(id: number) {\n        this.cleanImgFile();\n\n        let ref = this.storage.ref();\n\n        ref.child(`img/${id}.jpg`).getDownloadURL().then((imgUrl: any) => {\n            // `url` is the download URL of your archive\n\n            this.imgFile = imgUrl;\n\n        }).catch( (error: any) => {\n            // Handle any errors\n        });\n    }\n\n    @action readColors() {\n        this.cleanColors();\n\n        if (this.songActual !== null) {\n\n            this.songActual.colors.forEach((colorId: any) => {\n\n                let id = parseInt(colorId);\n                this.colorsActual = [];\n\n                this.db.collection(\"colors\").where(\"id\", \"==\", id).get().then((querySnapshot: any) => {\n\n                    querySnapshot.forEach((colorDB: any) => {\n\n                        let color = {\n                            id: colorDB.data().id,\n                            color: colorDB.data().color\n                        }\n\n                        this.colorsActual.push(color);\n                    });\n                }).catch(function(error: any) {\n                    console.log(\"Error getting documents: \", error);\n                });\n            });\n        }\n    }\n\n    /* setter methods */\n\n    /* this method reset the value of the variable */\n\n    @action cleanSong() {\n        this.songActual = null;\n    }\n\n    @action cleanGenre() {\n        this.genreActual = \"\";\n    }\n\n    @action cleanGenres() {\n        this.genresActual = null;\n    }\n\n    @action cleanSongFile() {\n        this.songFile = null;\n    }\n\n    @action cleanImgFile() {\n        this.imgFile = null;\n    }\n\n    @action cleanColors() {\n        this.colorsActual = null;\n    }\n\n}","import { observable, action, computed, extendObservable } from 'mobx';\n\nexport default class MusicStore {\n\n    db: any = null;\n\n    constructor(db: any) {\n        this.db = db;\n    }\n\n    @observable musicArray: any = [];\n    @observable musicArrayBackup: any = [];\n\n    @observable filterGenre: any = null;\n    @observable filterBand: any = null;\n    @observable filterColor: any = null;\n\n    /* This method read the data from realtime board of firebase, with the method on, read all the objects and update when anyone is edited */\n\n    @action readMusic() {\n        this.cleanMusicArray();\n\n        //order by name\n        this.db.collection(\"songs\").orderBy(\"name\", \"asc\").get().then((querySnapshot: any) => {\n\n            this.musicArray = [];\n            this.musicArrayBackup = [];\n\n            querySnapshot.forEach((doc: any) => {\n\n                let song = {\n                    name: doc.data().name,\n                    id: doc.data().id,\n                    album: doc.data().album,\n                    year: doc.data().year,\n                    genre: doc.data().genre,\n                    colors: doc.data().colors,\n                    a_info: doc.data().a_info,\n                    autor: doc.data().autor,\n                    idImg: doc.data().idImg\n                }\n\n                this.musicArrayBackup.push(song);\n                this.musicArray.push(song);\n            });\n        }).catch(function (error: any) {\n            console.log(\"Error getting documents: \", error);\n        });\n    }\n\n    @action readFilterGenre() {\n        this.cleanFilterGenre();\n\n        this.db.collection(\"genres\").get().then((querySnapshot: any) => {\n            this.filterGenre = [];\n            querySnapshot.forEach((doc: any) => {\n\n                let genre = {\n                    name: doc.data().name,\n                    id: doc.data().id\n                }\n\n                this.filterGenre.push(genre);\n            });\n        }).catch(function (error: any) {\n            console.log(\"Error getting documents: \", error);\n        });\n    }\n\n    @action readFilterBand() {\n        this.cleanFilterBand();\n\n        this.db.collection(\"bands\").get().then((querySnapshot: any) => {\n            this.filterBand = [];\n            querySnapshot.forEach((doc: any) => {\n                let band = {\n                    name: doc.data().name,\n                    id: doc.data().id\n                }\n\n                this.filterBand.push(band);\n            });\n        }).catch(function (error: any) {\n            console.log(\"Error getting documents: \", error);\n        });\n    }\n\n    @action readFilterColor() {\n        this.cleanFilterColor();\n\n        this.db.collection(\"colors\").get().then((querySnapshot: any) => {\n            this.filterColor = [];\n            querySnapshot.forEach((doc: any) => {\n                let color = {\n                    name: doc.data().color,\n                    id: doc.data().id\n                }\n\n                this.filterColor.push(color);\n            });\n        }).catch(function (error: any) {\n            console.log(\"Error getting documents: \", error);\n        });\n    }\n\n    /* filter methods */\n\n    @action filterByBand(bandName: string) {\n        this.musicArray = this.musicArrayBackup;\n        this.musicArray = this.musicArray.filter((song: any) => song.autor === bandName);\n    }\n\n    @action filterByGenre(genreId: number) {\n        this.musicArray = this.musicArrayBackup;\n\n        this.musicArray = [];\n\n        this.musicArrayBackup.forEach((song: any) => {\n            if (song.genre) {\n                song.genre.forEach((genreIdSong: any) => {\n                    if (genreIdSong === genreId) {\n                        this.musicArray.push(song);\n                    }\n                });\n            }\n        });\n    }\n\n    @action filterByColor(colorId: number) {\n        this.musicArray = this.musicArrayBackup;\n\n        this.musicArray = [];\n\n        this.musicArrayBackup.forEach((song: any) => {\n            if (song.colors) {\n                song.colors.forEach((colorIdSong: any) => {\n                    if (colorIdSong === colorId) {\n                        this.musicArray.push(song);\n                    }\n                });\n            }\n        });\n    }\n\n    /* this method reset the value of the variable */\n\n    @action cleanMusicArray() {\n        this.musicArray = [];\n        this.musicArrayBackup = [];\n    }\n\n    @action cleanFilterGenre() {\n        this.filterGenre = null;\n    }\n\n    @action cleanFilterBand() {\n        this.filterBand = null;\n    }\n\n    @action cleanFilterColor() {\n        this.filterColor = null;\n    }\n\n}","import { observable, action, computed, extendObservable } from 'mobx';\n\nexport default class GameStore {\n\n    db: any = null;\n\n    constructor(db: any) {\n        this.db = db;\n    }\n\n    @observable game: any = null;\n    @observable comments: any = [];\n\n    @observable playerA: any = null;\n    @observable playerB: any = null;\n\n    @observable listenerComments: any = null;\n\n    //read methods\n\n    @action findGame(idGame: string) {\n\n        this.db.collection(\"games\").doc(idGame).get().then((doc: any) => {\n            this.cleanGame();\n\n            let g = doc.data();\n\n            this.game = g;\n\n        }).catch((error: any) => {\n            console.log(\"Error getting game: \", error);\n        });\n    }\n\n    @action findComments(idGame: string) {\n\n        this.listenerComments = this.db.collection(\"games\").doc(idGame).collection(\"comments\").orderBy(\"timestamp\", \"desc\").onSnapshot((querySnapshot: any) => {\n            this.cleanComments();\n\n            querySnapshot.forEach((doc: any) => {\n\n                let c = {\n                    data: doc.data().data,\n                    uid: doc.data().uid,\n                    id: doc.id,\n                    timestamp: doc.data().timestamp\n                }\n\n                this.comments.push(c);\n            });\n        });\n    }\n\n    @action findGameCard(uid: string, setAutor: (autor: any, listener: any) => void) {\n\n        let listenerAutor = this.db.collection(\"users\").doc(uid).onSnapshot((doc: any) => {\n\n            let autor = {\n                displayName: doc.data().displayName\n            }\n\n            setAutor(autor, listenerAutor);\n        });\n    }\n\n    //read methods\n\n    //write methods\n\n    @action writeComment(data: string, uid: string) {\n\n        let newCom = {\n            data,\n            uid,\n            timestamp: new Date().getTime()\n        }\n\n        this.db.collection(\"games\").doc(this.game.idGame+\"\").collection(\"comments\").add(newCom)\n            .then(function (docRef: any) {\n                console.log(\"Document written with ID: \", docRef.id);\n            })\n            .catch(function (error: any) {\n                console.error(\"Error adding document: \", error);\n            });\n    }\n\n    //write methods\n\n    @action cleanGame() {\n        this.game = null;\n    }\n\n    @action cleanComments() {\n        this.comments = [];\n    }\n\n    @action cleanListenerComments(listenerComments: any) {\n        this.comments = [];\n\n        if (this.listenerComments) {\n            this.listenerComments();\n        }\n    }\n\n    @action cleanListenerGameCard(listenerAutor: any) {\n        listenerAutor();\n    }\n\n    @action cleanPlayerA() {\n        this.playerA = null;\n    }\n\n    @action cleanPlayerB() {\n        this.playerB = null;\n    }\n\n}","import { observable, action } from 'mobx';\n\nexport default class GuildStore {\n\n    db: any = null;\n\n    listenerGuild: any = null;\n\n    constructor(db: any) {\n        this.db = db;\n    }\n\n    @observable guilds: any[] = [];\n\n    @action readGuilds() {\n        this.cleanGuilds();\n\n        this.listenerGuild = this.db.collection(\"guilds\")\n            .onSnapshot((querySnapshot: any) => {\n                this.guilds = [];\n\n                querySnapshot.forEach((doc: any) => {\n\n                    let g = {\n                        name: doc.data().name,\n                        id: doc.data().id,\n                        points: doc.data().points,\n                        color: doc.data().color,\n                    }\n\n                    this.guilds.push(g);\n                });\n            });\n\n    }\n\n    @action stopGuilds() {\n        this.cleanGuilds();\n\n        if (this.listenerGuild) {\n            this.listenerGuild();\n        }\n    }\n\n    @action cleanGuilds() {\n        this.guilds = [];\n    }\n\n    @action addPointToGuild(user: any){\n        let id = user.guild;\n\n        let object = this.guilds.find((gu: any) => gu.id == id);\n        \n        let newPoints = parseInt(object.points + 1);\n\n        this.db.collection(\"guilds\").doc(id+\"\").update({\n            points: newPoints\n        }).catch((e: any) => {\n            console.error(\"Error setting guild points: \", e);\n        });\n    }\n\n}","import { observable, action, computed, extendObservable } from 'mobx';\nimport db from '../config/firebaseConfig';\n\nexport default class CommentStore {\n\n    db: any = null;\n\n    constructor(db: any){\n        this.db = db;\n    }\n    \n    @action findCommentAutor(uid: string, getAutor: (a: any, listener: any) => void) {\n\n        let autor: any = null;\n\n        let listenerAutor = this.db.collection(\"users\").doc(uid)\n        .onSnapshot((doc: any) => {\n            autor = doc.data();\n            \n            this.db.collection(\"guilds\").doc(autor.guild+\"\").get().then((guild: any) => {\n                if (guild.exists) {\n                    autor.color = guild.data().color;\n\n                    getAutor(autor, listenerAutor);\n\n                } else {\n                    // doc.data() will be undefined in this case\n                    console.log(\"No such Guild in Comment!\");\n                }\n            }).catch((error: any) => {\n                console.log(\"Error getting Guild in Comment:\", error);\n            });\n        });\n    }\n\n    @action cleanListernerCommentAutor(listenerAutor: any){\n        listenerAutor();\n    }\n    \n}\n","import { observable, action, computed, extendObservable } from 'mobx';\n\nexport default class GamesStore {\n\n    db: any = null;\n\n    listenerGames: any = null;\n\n    constructor(db: any) {\n        this.db = db;\n    }\n\n    @observable ourGames: any[] = [];\n    @observable ourGamesBackup: any[] = [];\n\n    @observable otherGames: any[] = [];\n    @observable otherGamesBackup: any[] = [];\n\n    /* This method read the data from realtime board of firebase, with the method on, read all the objects and update when anyone is edited */\n\n    @action setListenerGames(autor: string) {\n\n        this.cleanGames();\n\n        this.listenerGames = this.db.collection(\"games\").orderBy(\"timestamp\", \"desc\").onSnapshot((querySnapshot: any) => {\n\n            this.cleanGames();\n\n            querySnapshot.forEach((doc: any) => {\n\n                let g = doc.data();\n\n                if (g.autor === autor) {\n                    this.ourGames.push(g);\n                    this.ourGamesBackup.push(g);\n                } else {\n                    this.otherGames.push(g);\n                    this.otherGamesBackup.push(g);\n                }\n            });\n        });\n    }\n\n    @action deleteGame(id: string) {\n\n        this.db.collection(\"games\").doc(id).collection(\"comments\").get().then((querySnapshot: any) => {\n            querySnapshot.forEach((docRef: any) => {\n\n                this.db.collection(\"games\").doc(id).collection(\"comments\").doc(docRef.id).delete().then(() => {\n                   // console.log(\"comment successfully deleted!\");\n                }).catch((error: any) => {\n                    console.error(\"Error removing comment: \", error);\n                });\n            });\n\n           // console.log(\"Comments successfully deleted!\");\n        }).catch((error: any) => {\n            console.error(\"Error removing comments: \", error);\n        });\n\n        this.db.collection(\"games\").doc(id).delete().then(() => {\n            console.log(\"Game successfully deleted!\");\n        }).catch((error: any) => {\n            console.error(\"Error removing game: \", error);\n        });\n    }\n\n    /* write methods */\n\n    @action createGame(uid: string, name: string, redirectGame: (id: string) => void) {\n\n        // Add a new document with a generated id.\n        this.db.collection(\"games\").add({\n            name,\n            autor: uid,\n            state: \"new\",\n            timestamp: new Date().getTime(),\n        })\n            .then((docRef: any) => {\n\n                this.db.collection(\"games\").doc(docRef.id).update({\n                    idGame: docRef.id\n                }).catch((e: any) => {\n                    console.error(\"Error setting game id: \", e);\n                });\n                console.log(\"Game written with ID: \", docRef.id);\n\n                redirectGame(docRef.id);\n            })\n            .catch((error: any) => {\n                console.error(\"Error adding game: \", error);\n            });\n    }\n\n    /* filter methods */\n\n    @action cleanListenerGames() {\n\n        if (this.listenerGames) {\n            this.listenerGames();\n        }\n    }\n\n    @action cleanGames() {\n        this.ourGames = [];\n        this.ourGamesBackup = [];\n        this.otherGames = [];\n        this.otherGamesBackup = [];\n    }\n\n}\n\nfunction sortByTimestamp(a: any, b: any) {\n    return a.timestamp - b.timestamp;\n}","import db, { auth, storage } from '../config/firebaseConfig';\n\nimport AuthStore from './AuthStore';\nimport SongStore from './SongStore';\nimport MusicStore from './MusicStore';\nimport GameStore from './GameStore';\nimport GuildStore from './GuildStore';\nimport CommentStore from './CommentStore';\nimport GamesStore from './GamesStore';\n\nconst authStore = new AuthStore(db, auth);\nconst songStore = new SongStore(db, storage);\nconst musicStore = new MusicStore(db);\nconst gameStore = new GameStore(db);\nconst gamesStore = new GamesStore(db);\nconst guildStore = new GuildStore(db);\nconst commentStore = new CommentStore(db);\n\nexport default {\n    authStore,\n    songStore,\n    musicStore,\n    gameStore,\n    gamesStore,\n    guildStore,\n    commentStore\n};","import React, { Component } from 'react';\nimport p5 from 'p5';\nimport \"p5/lib/addons/p5.sound\";\n\nexport default class P5Visualizer extends Component {\n\n    componentDidMount() {\n        this.canvas = new p5((p) => {\n\n            let width = document.querySelector('#canvas').clientWidth;\n            let height = document.querySelector('#canvas').clientHeight;\n\n            let color = [];\n\n            let audioSpect = [];\n            let spectrum;\n            let fft;\n            let s;\n\n            let btn = false;\n\n            let link = `${this.props.link}`;\n\n            p.preload = function () {\n                p.soundFormats('mp3', 'ogg');\n\n                s = p.loadSound(link);\n                fft = new p5.FFT();\n            }\n\n            p.setup = function () {\n                p.createCanvas(width, height, p.WEBGL);\n                p.noStroke();\n\n                spectrum = fft.waveform();\n\n                audioSpect = new Array(8);\n                for (var i = 0; i < audioSpect.length; i++) {\n                    audioSpect[i] = new Array(10);\n                }\n\n                for (let a = 0; a < audioSpect.length; a++) {\n                    for (let b = 0; b < audioSpect[a].length; b++) {\n                        audioSpect[a][b] = false;\n                    }\n                }\n                s.loop();\n\n                p.frameRate(60);\n            };\n\n            p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\n                if (props.color) {\n\n                    color = [];\n\n                    var colors = props.color.split(',');\n                    color.push(parseInt(colors[0]));\n                    color.push(parseInt(colors[1]));\n                    color.push(parseInt(colors[2]));\n                }\n\n                if (props.vol) {\n                    let val = parseInt(props.vol) / 100;\n                    if (s) {\n                        s.setVolume(val);\n                    }\n                }\n\n            };\n\n            p.draw = function () {\n\n                let marX = width / 42.3333;\n                let marY = height / 45.3333;\n\n                let tamX = width / 9.6269;\n                let tamY = height / 12.5;\n\n                p.background(250);\n\n                /*\n                p.fill(250, 0, 0);\n                p.ellipse(0, 0, 10, 10);\n                p.noFill();*/\n\n                p.rectMode(p.CORNER);\n\n                p.push();\n                p.translate(-width / 2, -height / 2);\n\n                for (let x = 0; x < audioSpect.length; x++) {\n\n                    for (let y = 0; y < audioSpect[0].length; y++) {\n                        if (audioSpect[x][y]) {\n                            //let op = 100 - (i * 5);\n\n                            //let op = 200;\n\n                            p.fill(color[0], color[1], color[2]);\n\n                            p.rect(((x * (tamX + marX))), (height - (tamY)) - (y * (tamY + marY)), tamX,\n                                tamY);\n                            p.noFill();\n\n                            audioSpect[x][y] = false;\n                        }\n                    }\n                }\n\n                p.rectMode(p.CENTER);\n                p.pop();\n                p.calculate();\n                p.setButtons();\n            };\n\n            p.setButtons = function () {\n                if (btn === false) {\n                    let play = document.querySelector('#play');\n                    if (play) {\n                        play.addEventListener('click', p.changePlay);\n                    }\n                    let stop = document.querySelector('#stop');\n                    if (stop) {\n                        stop.addEventListener('click', p.stop);\n                        btn = true;\n                    }\n                }\n            }\n\n            p.calculate = function () {\n                spectrum = fft.analyze();\n                let num = 50;\n\n                //\n                let mov = 25;\n\n                for (let i = mov; i < 1000; i += num) {\n                    let val = 0;\n\n                    for (let j = 0; j < num; j++) {\n                        let valor = Math.abs(spectrum[i + j]);\n                        val += (valor * 1);\n                    }\n\n                    let prom = val / num;\n\n                    let index = (i - mov) / num;\n\n                    if (index < audioSpect.length) {\n                        let n = parseInt(prom / 10) - 8;\n\n                        if (n < 0) {\n                            n = 0;\n                        }\n\n                        if (n > audioSpect[0].length) {\n                            n = 10;\n                        }\n\n                        for (let j = 0; j < n; j++) {\n                            audioSpect[index][j] = true;\n                        }\n                    } else {\n                        break;\n                    }\n                }\n            };\n\n            p.changePlay = function () {\n                if (s != null) {\n                    if (!s.isPlaying()) {\n                        s.loop();\n                    } else {\n                        s.pause();\n                    }\n                }\n            };\n\n            p.stop = function () {\n                if (s != null) {\n                    s.stop();\n                }\n            };\n\n            p.windowResized = function () {\n                if (document.querySelector('#canvas')) {\n                    width = document.querySelector('#canvas').clientWidth;\n                    height = document.querySelector('#canvas').clientHeight;\n                    p.resizeCanvas(width, height);\n                }\n            };\n\n        }, this.wrapper);\n        if (this.canvas.myCustomRedrawAccordingToNewPropsHandler) {\n            this.canvas.myCustomRedrawAccordingToNewPropsHandler(this.props);\n        }\n    }\n\n    shouldComponentUpdate(newprops) {\n\n        if (this.canvas.myCustomRedrawAccordingToNewPropsHandler) {\n            this.canvas.myCustomRedrawAccordingToNewPropsHandler(newprops);\n        }\n\n        return true;\n    }\n\n    componentWillUnmount() {\n\n        this.canvas.stop();\n\n        this.canvas.remove();\n        this.wrapper.remove();\n    }\n\n    render() {\n        return <div id=\"canvas\" ref={wrapper => this.wrapper = wrapper}></div>;\n    }\n}","import React, { Component } from 'react';\nimport './SongView.scss';\n\nimport stores from '../../stores/Stores';\nimport { observer } from 'mobx-react';\n\nimport P5Visualizer from '../../utils/P5Wrapper/P5Visualizer';\n\ninterface SongViewProps {\n  match?: any\n}\n\ninterface SongViewState {\n  song?: any,\n  colors?: any,\n  color?: string | null,\n  genres?: any,\n  genreString?: string | null,\n  songUrl?: string | null,\n  imgUrl?: string | null,\n  volume?: string\n}\n\n@observer class SongView extends Component<SongViewProps, SongViewState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      song: null,\n      colors: null,\n      color: \"25,25,25\",\n      genres: null,\n      genreString: \"\",\n      songUrl: null,\n      imgUrl: null,\n      volume: \"50\"\n    }\n  }\n\n  getId() {\n    return parseInt(this.props.match.params.id);\n  }\n\n  componentDidMount() {\n    stores.songStore.readSong(this.getId());\n  }\n\n  componentWillUnmount() {\n    stores.songStore.cleanGenre();\n    stores.songStore.cleanGenres();\n    stores.songStore.cleanColors();\n    stores.songStore.cleanSongFile();\n    stores.songStore.cleanImgFile();\n    stores.songStore.cleanSong();\n  }\n\n  render() {\n\n    if (this.state.song === null) {\n      if (stores.songStore.songActual) {\n        this.setState({ song: stores.songStore.songActual });\n      }\n      return <div className=\"Loading\"><p >Loading Song...</p></div>;\n    }\n\n    if (this.state.songUrl === null) {\n\n      if (stores.songStore.songFile) {\n        this.setState({ songUrl: stores.songStore.songFile });\n      }\n\n      return <div className=\"Loading\"><p >Loading Source...</p></div>;\n    }\n\n    if (this.state.imgUrl === null) {\n\n      if (stores.songStore.imgFile) {\n        this.setState({ imgUrl: stores.songStore.imgFile });\n      }\n\n      return <div className=\"Loading\"><p >Loading Source...</p></div>;\n    }\n\n    if (this.state.genres === null) {\n      if (stores.songStore.genresActual) {\n        this.setState({\n          genres: stores.songStore.genresActual,\n          genreString: stores.songStore.genreActual\n        });\n      }\n      return <div className=\"Loading\"><p >Loading genres...</p></div>;\n    }\n\n    if (this.state.colors === null) {\n\n      if (stores.songStore.colorsActual) {\n        this.setState({ colors: stores.songStore.colorsActual });\n      }\n\n      return <div className=\"Loading\"><p >Loading colors...</p></div>;\n    }\n\n    return (\n      <section className=\"SongView\">\n\n        <div className=\"SongView__Song\">\n          <div className=\"SongView__Song-action\">\n\n            <div className=\"SongView__Song-action__view\">\n\n              {(this.state.color) ? <P5Visualizer vol={this.state.volume} color={this.state.color} link={this.state.songUrl}/> : \"\"}\n\n              <div className=\"SongView__Song-action__title\">{this.state.song.name}</div>\n            </div>\n\n            <div className=\"SongView__Song-action__buttons\">\n              <div className=\"SongView__Song-action__btn\" id=\"play\">\n                <svg className=\"playPauseSvg\" viewBox=\"0 0 50 50\">\n                <polygon points=\"15.89 42.45 46.11 25 15.89 7.55 15.89 42.45\"/>\n                <rect x=\"3.89\" y=\"7.22\" width=\"9.78\" height=\"35.56\"/>\n                </svg>\n              </div>\n              <div className=\"SongView__Song-action__btn\" id=\"stop\">\n                <svg className=\"stopSvg\" viewBox=\"0 0 50 50\">\n                  <rect x=\"5\" y=\"5\" width=\"40\" height=\"40\"/>\n                </svg>\n              </div>\n            </div>\n\n            <input type=\"range\" defaultValue={this.state.volume} min=\"0\" max=\"100\" className=\"SongView__Song-action__input\" onChange={(e:any) => {\n              e.preventDefault();\n              this.setState({volume: e.target.value});\n            }} />\n\n          </div>\n\n          <div className=\"SongView__Song-data\">\n\n            <h3>{this.state.song.autor}</h3>\n\n            <p>{this.state.song.a_info}</p>\n\n            <h4><strong>GENRES: </strong>{this.state.genreString}</h4>\n            <h4><strong>YEAR: </strong>{this.state.song.year}</h4>\n            <h4><strong>ALBUM: </strong>{this.state.song.album}</h4>\n\n            <div className=\"SongView__Song-data__bottom\">\n\n              <img src={stores.songStore.imgFile} className=\"SongView__Song-data__img\" />\n\n              <div className=\"SongView__Song-data__buttons\">\n\n                <div className=\"SongView__Song-data__colors\">\n                  {this.state.colors.map((color: any) => {\n                    return <div key={color.id} style={{ backgroundColor: `rgb(${color.color})` }}\n                      className=\"SongView__Song-data__color\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        this.setState({ color: color.color });\n                      }} >\n                    </div>\n                  })}\n                </div>\n\n                <div className=\"SongView__Song-data__add\">\n                  <svg className=\"addSvg\" viewBox=\"0 0 50 50\">\n                    <polygon points=\"32 18 32 5 18 5 18 18 5 18 5 32 18 32 18 45 32 45 32 32 45 32 45 18 32 18\"/>\n                  </svg>\n                </div>\n\n              </div>\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </section>\n    );\n  }\n}\n\nexport default SongView;\n","import React, { Component } from 'react';\nimport './ErrorPage.scss';\n\nclass ErrorPage extends Component {\n  render() {\n    return (\n      <section className=\"ErrorPage\">\n        <h3>Página no Encontrada</h3>\n      </section>\n    );\n  }\n}\n\nexport default ErrorPage;\n","import React, { Component } from 'react';\nimport './Dash.scss';\n\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react';\n\nimport stores from '../../stores/Stores';\n\ninterface DashProps {\n}\n\ninterface DashState {\n\n}\n\n@observer class Dash extends Component<DashProps, DashState> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n        }\n\n    }\n\n    componentDidMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n\n        return (\n            <section className=\"Dash\">\n\n                <svg className=\"Logo \" viewBox=\"0 0 96 138\">\n                    <path d=\"M96,138H0V0H96ZM8,130H88V8H8Z\" />\n                    <path d=\"M35,38.46H27.32L25.89,42H20.64l8-18.2h5.07L41.8,42H36.44Zm-1.5-3.79-2.34-5.83-2.34,5.83Z\" />\n                    <path d=\"M60,23.8H65.1V37.92h8.68V42H60Z\" />\n                    <path d=\"M26.69,63.88H21.1V59.8H37.41v4.08H31.84V78H26.69Z\" />\n                    <path d=\"M73,74v4H58.35V59.8H72.63v4H63.45v3.07h8.08v3.84H63.45V74Z\" />\n                    <path d=\"M64.53,109.16H61.72V114H56.57V95.8h8.32a10.29,10.29,0,0,1,4.29.83A6.26,6.26,0,0,1,72,99a6.37,6.37,0,0,1,1,3.56A6.29,6.29,0,0,1,72,106a6.2,6.2,0,0,1-2.62,2.29L73.34,114H67.83Zm3.25-6.63a2.46,2.46,0,0,0-.81-2,3.52,3.52,0,0,0-2.39-.7H61.72v5.33h2.86a3.62,3.62,0,0,0,2.39-.68A2.48,2.48,0,0,0,67.78,102.53Z\" />\n                    <rect x=\"25.92\" y=\"101.56\" width=\"6.68\" height=\"6.68\" />\n                </svg>\n\n                <div className=\"Dash__buttons\">\n\n                    <Link to={`/`}>\n                        <div className=\"Dash__buttons-btn \"><h2 className=\"hvr-underline-from-left\">Home</h2></div>\n                    </Link>\n                    <Link to={`/guilds`}>\n                        <div className=\"Dash__buttons-btn\"><h2 className=\"hvr-underline-from-left\">Guilds</h2></div>\n                    </Link>\n                    <Link to={`/catalog`}>\n                        <div className=\"Dash__buttons-btn\"><h2 className=\"hvr-underline-from-left\">Catalog</h2></div>\n                    </Link>\n                    <Link to={`/profile`}>\n                        <div className=\"Dash__buttons-btn\"><h2 className=\"hvr-underline-from-left\">Profile</h2></div>\n                    </Link>\n                    <Link to={`/about`}>\n                        <div className=\"Dash__buttons-btn\"><h2 className=\"hvr-underline-from-left\">About</h2></div>\n                    </Link>\n                </div>\n\n                <div className=\"Dash__option\">\n                    <div onClick={(e: any) => { \n                        e.preventDefault(); \n                        stores.authStore.signOut();\n                    }} className=\"Dash__option-btn\"><h2 className=\"hvr-underline-from-left\">Sing Out</h2></div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Dash;\n","import React, { Component } from 'react';\nimport './Filter.scss';\n\nimport { observer } from 'mobx-react';\nimport stores from '../../stores/Stores';\n\ninterface FilterProps {\n}\n\ninterface FilterState {\n}\n\n@observer class Filter extends Component<FilterProps, FilterState> {\n\n    constructor(props: any) {\n        super(props);\n    }\n\n    componentDidMount() {\n        stores.musicStore.readFilterGenre();\n        stores.musicStore.readFilterBand();\n        stores.musicStore.readFilterColor();\n    }\n\n    componentWillUnmount() {\n        stores.musicStore.cleanFilterGenre();\n        stores.musicStore.cleanFilterBand();\n        stores.musicStore.cleanFilterColor();\n    }\n\n    render() {\n\n        if (!stores.musicStore.filterGenre) {\n            return <div className=\"Filter\"><div className=\"Loading\"><p>Loading Filter...</p></div></div>;\n        }\n\n        if (!stores.musicStore.filterBand) {\n            return <div className=\"Filter\"><div className=\"Loading\"><p>Loading Filter...</p></div></div>;\n        }\n\n        if (!stores.musicStore.filterColor) {\n            return <div className=\"Filter\"><div className=\"Loading\"><p>Loading Filter...</p></div></div>;\n        }\n\n        return (\n            <section className=\"Filter\">\n                <div className=\"Filter__genre\">\n                    <h2 className=\"Filter-title\">Genre</h2>\n                    <div className=\"Filter-genres\">\n                        {stores.musicStore.filterGenre.map((genre: any) => {\n                            return <h3 className=\"hvr-underline-from-right\" key={genre.id} onClick={(e: any) => {\n                                e.preventDefault();\n                                stores.musicStore.filterByGenre(genre.id);\n                            }\n                            }>{genre.name}</h3>;\n                        })}\n                    </div>\n                </div>\n                <div className=\"Filter__band\">\n                    <h2 className=\"Filter-title\">Band</h2>\n                    <div className=\"Filter-bands\">\n                        {stores.musicStore.filterBand.map((band: any) => {\n                            return <h3 className=\"hvr-underline-from-right\" key={band.id} onClick={(e: any) => {\n                                e.preventDefault();\n                                stores.musicStore.filterByBand(band.name);\n                            }\n                            }>{band.name}</h3>;\n                        })}\n                    </div>\n                </div>\n                <div className=\"Filter__color\">\n                    <h2 className=\"Filter-title\">Color</h2>\n                    <div className=\"Filter-colors\">\n                        {stores.musicStore.filterColor.map((color: any) => {\n                            return <div key={color.id} style={{ backgroundColor: `rgb(${color.name})` }} onClick={(e: any) => {\n                                e.preventDefault();\n                                stores.musicStore.filterByColor(color.id);\n                            }\n                            }></div>;\n                        })}\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport './SongCard.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst SongCard = function (props: any) {\n    return (\n        <div className=\"SongCard\">\n            <Link to={`/song/${props.song.id}`}>\n                <svg viewBox=\"0 0 50 50\">\n                    <path d=\"M17.3,33.88V16.12L32.7,25Zm2-14.3V30.42L28.68,25Z\" />\n                </svg>\n                <div className=\"SongCard-title\"><h3>{props.song.name}</h3></div>\n            </Link>\n        </div>\n\n    );\n}\n\nexport default SongCard;\n","import React, { Component } from 'react';\nimport './Catalog.scss';\n\nimport { observer } from 'mobx-react';\nimport stores from '../../stores/Stores';\nimport Filter from '../Filter/Filter';\nimport SongCard from '../SongCard/SongCard';\n\ninterface CatalogProps {\n}\n\ninterface CatalogState {\n}\n\n@observer class Catalog extends Component<CatalogProps, CatalogState> {\n\n  constructor(props: any) {\n    super(props);\n\n  }\n\n  componentDidMount() {\n    stores.musicStore.readMusic();\n  }\n\n  componentWillUnmount() {\n    stores.musicStore.cleanMusicArray();\n  }\n\n  render() {\n\n    if (stores.musicStore.musicArray.length == 0) {\n      return <div className=\"Catalog\"><div className=\"Loading\"><p>Loading Music...</p></div></div>;\n    }\n\n    return (\n      <section className=\"Catalog\">\n\n        <div className=\"Catalog__music scroll\">\n          {stores.musicStore.musicArray.map((song: any) => {\n            return (<SongCard key={song.id} song={song} />)\n          })}\n        </div>\n\n        <Filter />\n\n\n      </section>\n    );\n  }\n}\n\nexport default Catalog;\n","import React, { Component } from 'react';\nimport './About.scss';\n\nimport { observer } from 'mobx-react';\n\ninterface AboutProps {\n}\n\ninterface AboutState {\n\n}\n\n@observer class About extends Component<AboutProps, AboutState> {\n\n    constructor(props: any) {\n        super(props);\n\n    }\n\n    componentDidMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n\n        return (\n            <section className=\"About\">\n\n                <svg className=\"About-logo\" viewBox=\"0 0 96 138\">\n                    <path d=\"M96,138H0V0H96ZM8,130H88V8H8Z\" />\n                    <path d=\"M35,38.46H27.32L25.89,42H20.64l8-18.2h5.07L41.8,42H36.44Zm-1.5-3.79-2.34-5.83-2.34,5.83Z\" />\n                    <path d=\"M60,23.8H65.1V37.92h8.68V42H60Z\" />\n                    <path d=\"M26.69,63.88H21.1V59.8H37.41v4.08H31.84V78H26.69Z\" />\n                    <path d=\"M73,74v4H58.35V59.8H72.63v4H63.45v3.07h8.08v3.84H63.45V74Z\" />\n                    <path d=\"M64.53,109.16H61.72V114H56.57V95.8h8.32a10.29,10.29,0,0,1,4.29.83A6.26,6.26,0,0,1,72,99a6.37,6.37,0,0,1,1,3.56A6.29,6.29,0,0,1,72,106a6.2,6.2,0,0,1-2.62,2.29L73.34,114H67.83Zm3.25-6.63a2.46,2.46,0,0,0-.81-2,3.52,3.52,0,0,0-2.39-.7H61.72v5.33h2.86a3.62,3.62,0,0,0,2.39-.68A2.48,2.48,0,0,0,67.78,102.53Z\" />\n                    <rect x=\"25.92\" y=\"101.56\" width=\"6.68\" height=\"6.68\" />\n                </svg>\n                <p className=\"About-text\">\n                    This web portal is part of a job for the ICESI University in Cali, Colombia. It is a FanPage made to pay homage to some outstanding artists in modern musical genres such as Rock and Metal.</p>\n                <p className=\"About-credits\">\n                    The songs are not mine, all the credits to the authors and bands mentioned here.</p>\n                <h3 className=\"About-brand\">by Santiago Ortiz Guevara</h3>\n            </section>\n        );\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { Link } from 'react-router-dom';\n\nimport './GameCard.scss';\n\nimport stores from '../../stores/Stores';\n\ninterface GameCardProps {\n    game?: any\n}\n\ninterface GameCardState {\n    autor?: any,\n    listenerAutor?: any\n}\n\n@observer export default class GameCard extends Component<GameCardProps, GameCardState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            autor: null,\n            listenerAutor: null\n        }\n\n        this.getAutor = this.getAutor.bind(this);\n    }\n\n    componentDidMount() {\n        stores.gameStore.findGameCard(this.props.game.autor, this.getAutor);\n    }\n\n    componentWillUnmount() {\n        stores.gameStore.cleanListenerGameCard(this.state.listenerAutor);\n    }\n\n    getAutor(a: any, listener: any): void {\n        this.setState({\n            autor: a,\n            listenerAutor: listener\n        });\n    }\n\n    onDragStart = (e: any, id: string) => {\n        e.dataTransfer.setData(\"id\", id);\n        //console.log(\"Dragging\", id);\n    }\n\n    render() {\n\n        if (this.state.autor == null) {\n            return (<div className=\"GameCard\">\n                <h5 > {this.props.game.name} </h5>\n                <h5> Loading... </h5>\n            </div>);\n        }\n\n        return (\n            <Link to={`/game/${this.props.game.idGame}`}>\n                <div draggable onDragStart={(e: any)=> this.onDragStart(e, this.props.game.idGame)} className=\"GameCard\">\n                    <h5 > {this.props.game.name} </h5>\n                    <p> {this.state.autor.displayName} </p>\n                </div>\n            </Link>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { style, classes } from \"typestyle\";\nimport { Link } from 'react-router-dom';\n\nimport Tooltip from 'react-tooltip-lite';\n\nimport './Guilds.scss';\n\nimport { observer } from 'mobx-react';\nimport stores from '../../stores/Stores';\nimport GameCard from '../GameCard/GameCard';\n\ninterface GuildProps {\n}\n\ninterface GuildState {\n    context?: number,\n    styleDelete?: any\n}\n\n@observer class Guilds extends Component<GuildProps, GuildState> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            context: 0,\n            styleDelete: {}\n        }\n\n    }\n\n    componentDidMount() {\n        stores.guildStore.readGuilds();\n        stores.gamesStore.setListenerGames(stores.authStore.user.uid);\n    }\n\n    componentWillUnmount() {\n        stores.gamesStore.cleanListenerGames();\n        stores.gamesStore.cleanGames();\n        stores.guildStore.stopGuilds();\n    }\n\n    onDragOver = (e: any) => {\n        e.preventDefault();\n\n        let s = style({\n            borderWidth: 5,\n            borderColor: \"rgb(250,87,75)\"\n        });\n\n        this.setState({\n            styleDelete: s\n        });\n    }\n\n    onDragLeave = (e: any) => {\n        e.preventDefault();\n\n        let s = style({\n            borderWidth: 8,\n            borderColor: \"rgb(25, 25, 25)\"\n        });\n\n        this.setState({\n            styleDelete: s\n        });\n    }\n\n    onDrop = (e: any) => {\n        e.preventDefault();\n\n        let id = e.dataTransfer.getData(\"id\");\n\n        //console.log(\"Dropping\", id);\n\n        stores.gamesStore.deleteGame(id);\n\n        let s = style({\n            borderWidth: 8,\n            borderColor: \"rgb(25, 25, 25)\"\n        });\n\n        this.setState({\n            styleDelete: s\n        });\n    }\n\n    getGuildContext() {\n        switch (this.state.context) {\n            case 0:\n\n                return (\n                    <div className=\"Guilds-own\">\n\n                        <div className=\"Guilds-section\">\n\n                            <div><h3>Your Matches</h3></div>\n                            <div><h4 onClick={(e: any) => {\n                                e.preventDefault();\n                                this.setState({ context: 1 });\n                            }} className=\"hvr-underline-from-left\">Other Matches</h4></div>\n\n                        </div>\n\n                        <div className=\"Guilds-cont\">\n                            <div className=\"Guilds-matches scroll\">\n                                {stores.gamesStore.ourGames && stores.gamesStore.ourGames.map((game: any) => {\n                                    return <GameCard key={game.idGame} game={game} />;\n                                })}\n                            </div>\n\n                            <div className=\"Guilds-options\">\n                                <input className=\"Guilds-search\" placeholder=\"Search by name\" type=\"text\" />\n                                <Link to=\"/newmatch\">\n                                    <div className=\"Guilds-create\"><h4>Create Match</h4></div>\n                                </Link>\n                                <Tooltip direction=\"left\" hoverDelay={0} content=\"Drop elements to delete\">\n                                    <div onDrop={(e: any) => this.onDrop(e)} onDragOver={(e: any) => this.onDragOver(e)} onDragLeave={(e: any) => this.onDragLeave(e)} className={classes(this.state.styleDelete, \"Guilds-delete\")}><h4>Delete Match</h4></div>\n                                </Tooltip>\n                            </div>\n                        </div>\n                    </div>\n                )\n                break;\n\n            case 1:\n                return (\n                    <div className=\"Guilds-others\">\n\n                        <div className=\"Guilds-section\">\n                            <div><h3>Other Matches</h3></div>\n                            <div><h4 onClick={(e: any) => {\n                                e.preventDefault();\n                                this.setState({ context: 0 });\n                            }} className=\"hvr-underline-from-left\">Your Matches</h4></div>\n                        </div>\n\n                        <div className=\"Guilds-cont\">\n                            <div className=\"Guilds-matches scroll\">\n                                {stores.gamesStore.otherGames && stores.gamesStore.otherGames.map((game: any) => {\n                                    return <GameCard key={game.idGame} game={game} />;\n                                })}\n                            </div>\n\n                            <div className=\"Guilds-options\">\n                                <input className=\"Guilds-search\" placeholder=\"Search by name\" type=\"text\" />\n                            </div>\n                        </div>\n\n                    </div>\n                )\n                break;\n        }\n    }\n\n    render() {\n\n        return (\n            <section className=\"Guilds\">\n\n                <div className=\"Guilds-score\">\n                    {stores.guildStore.guilds.map((guild: any) => {\n\n                        let hoverStyle = style({\n                            $nest: {\n                                '&:hover': {\n                                    color: `rgb(${guild.color})`,\n                                    borderColor: `rgb(${guild.color})`,\n                                }\n                            }\n                        });\n\n                        return (\n                            <div key={guild.id} className=\"Guilds-each\">\n                                <h3 className={classes(hoverStyle)} >{guild.points}</h3>\n                                <h5>{guild.name}</h5>\n                            </div>)\n                    })}\n                </div>\n\n                {this.getGuildContext()}\n\n            </section>\n        );\n    }\n}\n\nexport default Guilds;\n\n\n","import React, { Component } from 'react';\nimport { style, classes } from \"typestyle\";\n\nimport Tooltip from 'react-tooltip-lite';\n\nimport './Profile.scss';\n\nimport { observer } from 'mobx-react';\n\nimport stores from '../../stores/Stores';\n\ninterface ProfileProps {\n  history?: any\n}\n\ninterface ProfileState {\n}\n\n@observer class Profile extends Component<ProfileProps, ProfileState> {\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n    }\n\n  }\n\n  componentDidMount() {\n    stores.guildStore.readGuilds();\n  }\n\n  componentWillUnmount() {\n    stores.guildStore.stopGuilds();\n  }\n\n  render() {\n\n    if (!stores.authStore.user) {\n      return <div className=\"Loading\"><p>Loading User info...</p></div>;\n    }\n\n    if (stores.guildStore.guilds.length == 0) {\n      return <div className=\"Loading\"><p>Loading User guild...</p></div>;\n    }\n\n    return (\n      <section className=\"Profile\">\n\n        <div className=\"Profile-cont\">\n\n          <div className=\"Profile-info\">\n\n            <h1 className=\"Profile-title\">INFO</h1>\n\n            <div className=\"Profile-input\">\n\n              <h3>Display Name</h3>\n              <input disabled value={stores.authStore.user.displayName} />\n            </div>\n\n            <div className=\"Profile-input\">\n              <h3>Email</h3>\n              <input disabled value={stores.authStore.user.email} />\n            </div>\n\n            <div className=\"Profile-gameInfo\">\n\n              <div className=\"Profile-gameLeft\">\n\n                <h3>Games</h3>\n                <input disabled value={stores.authStore.user.games} />\n              </div>\n\n              <div className=\"Profile-gameRight\">\n\n                <h3>Victories</h3>\n                <input disabled value={stores.authStore.user.victories} />\n              </div>\n\n            </div>\n\n          </div>\n\n          <div className=\"Profile-guilds\">\n\n            <h1 className=\"Profile-title\">\n              <Tooltip hoverDelay={0} content=\"Select your guild\">\n                GUILD</Tooltip></h1>\n\n            <div className=\"Profile-contGuild\">\n\n              {stores.guildStore.guilds.map((guild: any) => {\n                let hoverStyle = style({\n                  $nest: {\n                    '&:hover': {\n                      color: `rgb(${guild.color})`,\n                    }\n                  }\n                });\n\n                let selectedStyle = style({\n                  color: `rgb(${guild.color})`,\n                  borderColor: `rgb(${guild.color})`,\n                });\n\n                //classes(class, class) write multiple classes\n\n                if (stores.authStore.user.guild == guild.id) {\n                  return (<h3 key={guild.id}\n                    className={classes(\"Profile-guild\", selectedStyle)}>{guild.name}</h3>)\n                } else {\n                  return (<h3 key={guild.id}\n                    className={classes(\"Profile-guild\", hoverStyle)}\n                    onClick={(e: any) => {\n                      e.preventDefault();\n                      //update user guild\n                      stores.authStore.updateTeam(guild.id);\n                    }}\n                  >{guild.name}</h3>)\n                }\n              })}\n\n            </div>\n\n            <h3 onClick={(e: any) => {\n              e.preventDefault();\n            }} className=\"Profile-update hvr-underline-from-center\">UPDATE</h3>\n          </div>\n\n        </div>\n\n      </section>\n    );\n  }\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport './Auth.scss';\n\nimport { observer } from 'mobx-react';\nimport stores from '../../stores/Stores';\n\ninterface AuthProps {\n  history?: any\n}\n\ninterface AuthState {\n  form?: number,\n  displayName?: string,\n  email?: string,\n  password?: string\n}\n\n@observer class Auth extends Component<AuthProps, AuthState> {\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      form: 0,\n      email: \"\",\n      password: \"\",\n      displayName: \"\"\n    }\n\n  }\n\n  componentDidUpdate() {\n  }\n\n  componentWillUnmount() {\n  }\n\n  handleKeyPressSignIn = (event: any) => {\n    if(event.key == 'Enter'){\n      if (this.state.email && this.state.email !== \"\" && this.state.password && this.state.password !== \"\") {\n        stores.authStore.signIn(this.state.email, this.state.password);\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n      }\n    }\n  }\n\n  handleKeyPressRegister = (event: any) => {\n    if(event.key == 'Enter'){\n      if (this.state.displayName && this.state.displayName !== \"\" && this.state.email && this.state.email !== \"\" && this.state.password && this.state.password !== \"\") {\n        stores.authStore.createNewUser(this.state.displayName, this.state.email, this.state.password);\n        this.setState({\n          email: \"\",\n          password: \"\",\n          displayName: \"\"\n        });\n      }\n    }\n  }\n\n  getFormContext() {\n    switch (this.state.form) {\n      case 0:\n        return <div className=\"SignIn\">\n          <h1 className=\"SignIn-title\">Sign In</h1>\n          <div className=\"SignIn-container\">\n            <input onKeyPress={this.handleKeyPressSignIn} onChange={(e: any) => this.setState({ displayName: e.target.value })} placeholder=\"Nickname\" className=\"SignIn-input\" type=\"hidden\" />\n            <input onKeyPress={this.handleKeyPressSignIn} onChange={(e: any) => this.setState({ email: e.target.value })} placeholder=\"Email\" className=\"SignIn-input\" type=\"email\" />\n            <input onKeyPress={this.handleKeyPressSignIn} onChange={(e: any) => this.setState({ password: e.target.value })} placeholder=\"Password\" className=\"SignIn-input\" type=\"password\" />\n          </div>\n          <div className=\"SignIn-containerBtn\">\n            <h3 onClick={(e: any) => {\n              e.preventDefault();\n              this.setState({\n                form: 1\n              });\n            }} className=\"SignIn-btn hvr-underline-from-left\" >SIGN UP</h3>\n            <h3 onClick={(e: any) => {\n              e.preventDefault();\n              if (this.state.email && this.state.email !== \"\" && this.state.password && this.state.password !== \"\") {\n                stores.authStore.signIn(this.state.email, this.state.password);\n                this.setState({\n                  email: \"\",\n                  password: \"\"\n                });\n              }\n            }} className=\"SignIn-btn hvr-underline-from-right\" >ACCEPT</h3>\n          </div>\n        </div>;\n        break;\n      case 1:\n        return <div className=\"SignUp\">\n          <h1 className=\"SignUp-title\">Sign Up</h1>\n          <div className=\"SignUp-container\">\n            <input onKeyPress={this.handleKeyPressRegister} onChange={(e: any) => this.setState({ displayName: e.target.value })} placeholder=\"Nickname\" className=\"SignUp-input\" type=\"text\" />\n            <input onKeyPress={this.handleKeyPressRegister} onChange={(e: any) => this.setState({ email: e.target.value })} placeholder=\"Email\" className=\"SignUp-input\" type=\"email\" />\n            <input onKeyPress={this.handleKeyPressRegister} onChange={(e: any) => this.setState({ password: e.target.value })} placeholder=\"Password\" className=\"SignUp-input\" type=\"password\" />\n          </div>\n          <div className=\"SignUp-containerBtn\">\n            <h3 onClick={(e: any) => {\n              e.preventDefault();\n              this.setState({\n                form: 0\n              });\n            }} className=\"SignUp-btn hvr-underline-from-left\" >SIGN IN</h3>\n            <h3 onClick={(e: any) => {\n              e.preventDefault();\n              if (this.state.displayName && this.state.displayName !== \"\" && this.state.email && this.state.email !== \"\" && this.state.password && this.state.password !== \"\") {\n                stores.authStore.createNewUser(this.state.displayName, this.state.email, this.state.password);\n                this.setState({\n                  email: \"\",\n                  password: \"\",\n                  displayName: \"\"\n                });\n              }\n            }} className=\"SignUp-btn hvr-underline-from-right\" >ACCEPT</h3>\n          </div>\n        </div>;\n        break;\n    }\n    return <p>Loading...</p>;\n  }\n\n  render() {\n\n    return (\n      <section className=\"Auth\">\n\n        {this.getFormContext()}\n\n      </section>\n    );\n  }\n}\n\nexport default Auth;\n","import React, { Component } from 'react';\nimport { style, classes } from \"typestyle\";\nimport Tooltip from 'react-tooltip-lite';\n\nimport './CreateGame.scss';\n\nimport { observer } from 'mobx-react';\nimport stores from '../../stores/Stores';\n\ninterface CreateGameProps {\n    history?: any\n}\n\ninterface CreateGameState {\n    name?: string\n}\n\n@observer class CreateGame extends Component<CreateGameProps, CreateGameState> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            name: \"\"\n        }\n\n        this.redirectGame = this.redirectGame.bind(this);\n    }\n\n    componentDidMount() {\n        stores.guildStore.readGuilds();\n    }\n\n    componentWillUnmount() {\n        stores.guildStore.stopGuilds();\n        stores.guildStore.cleanGuilds();\n    }\n\n    redirectGame(id: string): void {\n        //add points to the guild of game created\n        stores.guildStore.addPointToGuild(stores.authStore.user);\n\n        //go to the new game\n        this.props.history.push(`/game/${id}`);\n    }\n\n    handleKeyPressCreate = (event: any) => {\n        if (event.key == 'Enter') {\n            if (this.state.name && this.state.name !== \"\") {\n                stores.gamesStore.createGame(stores.authStore.user.uid, this.state.name, this.redirectGame);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <section className=\"CreateGame\">\n\n                <div className=\"CreateGame-cont\">\n                    <h1 className=\"CreateGame-title\">\n                        New Match\n                    </h1>\n                    <Tooltip styles={{width: '100%'}} hoverDelay={0} content=\"Max. 8 characters\">\n                        <input onKeyPress={this.handleKeyPressCreate} maxLength={8} onChange={(e: any) => this.setState({ name: e.target.value })} placeholder=\"Match Title\" className=\"CreateGame-input\" type=\"text\" />\n                    </Tooltip>\n                    <h3 onClick={(e: any) => {\n                        e.preventDefault();\n                        if (this.state.name && this.state.name !== \"\") {\n                            stores.gamesStore.createGame(stores.authStore.user.uid, this.state.name, this.redirectGame);\n                        }\n                    }} className=\"CreateGame-create hvr-underline-from-center\">CREATE</h3>\n\n                </div>\n\n            </section>\n        );\n    }\n}\n\nexport default CreateGame;\n\n\n","import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport './Comment.scss';\n\nimport stores from '../../stores/Stores';\n\ninterface CommentProps {\n    doc?: any\n}\n\ninterface CommentState {\n    autor?: any,\n    listenerAutor?: any\n}\n\n@observer export default class Comment extends Component<CommentProps, CommentState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            autor: null,\n            listenerAutor: null\n        }\n\n        this.getAutor = this.getAutor.bind(this);\n    }\n\n    componentDidMount() {\n        stores.commentStore.findCommentAutor(this.props.doc.uid, this.getAutor);\n    }\n\n    componentWillUnmount() {\n        stores.commentStore.cleanListernerCommentAutor(this.state.listenerAutor);\n    }\n\n    getAutor(a: any, listener: any): void {\n        this.setState({\n            autor: a,\n            listenerAutor: listener\n        });\n    }\n\n    render() {\n\n        if (this.state.autor == null) {\n            return (<div className=\"Comment\">\n                <h5> Loading... </h5>\n                <p> {this.props.doc.data} </p>\n            </div>);\n        }\n\n        return (\n            <div className=\"Comment\">\n                <h5 style={{ color: `rgb(${this.state.autor.color})` }}> {this.state.autor.displayName} </h5>\n                <p> {this.props.doc.data} </p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { style, classes } from \"typestyle\";\nimport Lottie from 'react-lottie';\n\nimport animationData from './settings.json'\n\nimport './Game.scss';\n\nimport stores from '../../stores/Stores';\nimport { observer } from 'mobx-react';\n\nimport Comment from '../Comment/Comment';\n\ninterface GameProps {\n    match?: any\n}\n\ninterface GameState {\n    comments?: any[],\n    listenerComments?: () => void\n}\n\n@observer class Game extends Component<GameProps, GameState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            comments: [],\n            listenerComments: () => { }\n        }\n    }\n\n    getId() {\n        return this.props.match.params.id;\n    }\n\n    componentDidMount() {\n        stores.guildStore.readGuilds();\n        stores.gameStore.findGame(this.getId());\n        stores.gameStore.findComments(this.getId());\n    }\n\n    componentWillUnmount() {\n        stores.gameStore.cleanListenerComments(this.state.listenerComments);\n        stores.guildStore.cleanGuilds();\n        stores.gameStore.cleanGame();\n    }\n\n    render() {\n\n        const defaultOptions = {\n            loop: true,\n            autoplay: true,\n            animationData: animationData,\n            rendererSettings: {\n                preserveAspectRatio: 'xMidYMid slice'\n            }\n        };\n\n        if (!stores.gameStore.game) {\n            return <div className=\"Loading\"><p>Loading Game...</p></div>;\n        }\n\n        return (\n            <section className=\"Game\">\n\n                <div className=\"Game-cont\">\n\n                    <div className=\"Game-left\">\n\n                        <Lottie options={defaultOptions}\n                            height={300}\n                            width={300} />\n\n                        <h4>Developing...</h4>\n\n                    </div>\n\n                    <div className=\"Game-right\">\n\n                        <div className=\"Game-score\">\n                            <div className=\"Game-playerA\">\n                                <h2>0</h2>\n                                <h4>Player A</h4>\n                            </div>\n\n                            <div className=\"Game-div\"></div>\n\n                            <div className=\"Game-playerB\">\n                                <h2>0</h2>\n                                <h4>Player B</h4>\n                            </div>\n                        </div>\n\n                        <div className=\"Game-comments scroll\">\n                            {stores.gameStore.comments.map((doc: any) => {\n                                return (<Comment key={doc.id} doc={doc} />)\n                            })}\n                        </div>\n\n                        <input type=\"text\" onKeyPress={(e: any) => {\n                            if (e.which == 13 || e.keyCode == 13) {\n                                stores.gameStore.writeComment(e.target.value, stores.authStore.user.uid);\n                                e.target.value = \"\";\n                            }\n                        }} placeholder=\"Your comment...\" id=\"inputComment\" />\n\n                    </div>\n\n                </div>\n\n            </section>\n        );\n    }\n}\n\nexport default Game;\n\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from '../Home/Home'\nimport SongView from '../SongView/SongView'\nimport ErrorPage from '../ErrorPage/ErrorPage'\nimport Dash from '../Dash/Dash';\nimport Catalog from '../Catalog/Catalog';\nimport About from '../About/About';\nimport Guilds from '../Guilds/Guilds';\nimport Profile from '../Profile/Profile';\nimport Auth from '../Auth/Auth';\nimport CreateGame from '../CreateGame/CreateGame';\nimport Game from '../Game/Game';\n\nimport stores from '../../stores/Stores';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ninterface AppProps {\n  history?: any\n}\n\ninterface AppState {\n  userState?: boolean\n}\n\ntoast.configure({\n  autoClose: 3000,\n  draggable: false,\n  //etc you get the idea\n});\n\nclass App extends Component<AppProps, AppState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      userState: false,\n    }\n\n    this.setUserState = this.setUserState.bind(this);\n    //console.log();\n  }\n\n  componentDidMount() {\n    stores.authStore.userStateListener(this.setUserState);\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  setUserState(state: boolean): void {\n    this.setState({ userState: state });\n    if (state) {\n      this.notifyUserState(\"Authentication Success\");\n    } else {\n      this.notifyUserState(\"Disconnected\");\n    }\n  }\n\n  notifyUserState(data: string) {\n    toast(data, {\n      className: 'toast',\n      bodyClassName: \"grow-font-size\",\n      progressClassName: 'toast-bar'\n    });\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <BrowserRouter basename=\"/alter-app\">\n\n          <Dash />\n\n          {this.state.userState ?\n\n            <Switch>\n\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/auth\" component={Auth} exact />\n              <Route path=\"/guilds\" component={Guilds} exact />\n              <Route path=\"/newmatch\" component={CreateGame} exact />\n              <Route path=\"/catalog\" component={Catalog} exact />\n              <Route path=\"/song/:id\" component={SongView} exact />\n              <Route path=\"/game/:id\" component={Game} exact />\n              <Route path=\"/profile\" component={Profile} exact />\n              <Route path=\"/about\" component={About} exact />\n              <Route component={ErrorPage} />\n\n            </Switch>\n\n            : <Auth />}\n\n        </BrowserRouter>\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}